{"version":3,"mappings":"ssBAAO,MAAMA,EAA8C,GAC9CC,EAAcC,GAAmC,CAC5D,MAAMC,EAAWD,EAAM,IAAIE,GAClB,IAAI,QAAc,CAACC,EAASC,IAAW,CAC5C,MAAMC,EAAM,IAAI,MAChBA,EAAI,IAAM,UAAUH,CAAI,GACxBG,EAAI,OAAS,IAAY,CACvBP,EAAOI,CAAI,EAAIG,EACfF,EAAA,CACF,EACAE,EAAI,QAAU,IAAY,CACxBD,EAAO,IAAI,MAAM,yBAAyBF,CAAI,EAAE,CAAC,CACnD,CACF,CAAC,CACF,EAED,OAAO,QAAQ,IAAID,CAAQ,EAAE,KAAK,MAAe,CACnD,ECjBO,MAAMK,CAAS,CACpB,YAAmBC,EAA+B,CAA/B,SAAAA,CAAgC,CAEnD,OAAc,CACZ,KAAK,IAAI,UAAU,EAAG,EAAG,KAAK,IAAI,OAAO,MAAO,KAAK,IAAI,OAAO,MAAM,CACxE,CAEA,UAAUF,EAAuBG,EAAWC,EAAWC,EAAoB,CACzE,KAAK,IAAI,UAAUL,EAAKG,EAAGC,EAAGC,EAAMA,CAAI,CAC1C,CACF,CCVO,MAAMC,CAAa,CAGxB,aAAc,CAFd,KAAQ,SAAW,IAGjB,OAAO,iBAAiB,UAAWC,GAAS,CAC1C,KAAK,KAAK,IAAIA,EAAM,IAAI,aAAa,CACvC,CAAC,EACD,OAAO,iBAAiB,QAASA,GAAS,CACxC,KAAK,KAAK,OAAOA,EAAM,IAAI,aAAa,CAC1C,CAAC,CACH,CAEA,OAAOC,EAAsB,CAC3B,OAAO,KAAK,KAAK,IAAIA,CAAG,CAC1B,CAEA,OAAc,CACZ,KAAK,KAAK,OACZ,CACF,CCnBO,MAAMC,CAAe,CAI1B,YACUC,EACAC,EACAC,EACAC,EACAC,EACR,CALQ,WAAAJ,EACA,gBAAAC,EACA,iBAAAC,EACA,gBAAAC,EACA,eAAAC,EARV,KAAQ,aAAe,EACvB,KAAQ,YAAc,CAQnB,CACH,OAAOC,EAAkB,CACvB,KAAK,aAAeA,EAChB,KAAK,aAAe,KAAK,YAC3B,KAAK,YAAc,EACnB,KAAK,cAAgB,KAAK,aAAe,GAAK,KAAK,WAEvD,CAEA,KACEb,EACAC,EACAC,EACAC,EACM,CACNH,EAAI,UACF,KAAK,MACL,KAAK,aAAe,KAAK,WACzB,EACA,KAAK,WACL,KAAK,YACLC,EACAC,EACAC,EACAA,CAAA,CAEJ,CAEA,OAAc,CACZ,KAAK,aAAe,EACpB,KAAK,YAAc,CACrB,CAEA,SAASK,EAA+B,CACtC,KAAK,MAAQA,EACb,KAAK,OACP,CACF,CCpCO,MAAMM,CAAO,CAWlB,YACUC,EACAC,EACAC,EACR,CAHQ,WAAAF,EACA,gBAAAC,EACA,gBAAAC,EAbV,KAAO,EAAI,EACX,KAAO,EAAI,EACX,KAAQ,MAAQ,IAChB,KAAQ,kBAAoB,GAC5B,KAAQ,UAAuB,QAC/B,KAAQ,SAAW,GACnB,KAAQ,aAAe,GASrB,KAAK,WAAa,CAChB,KAAM,CACJ,KAAM,IAAIV,EACRhB,EAAO,eAAe,IACnB,IAAa,CACZ,MAAM,IAAI,MAAM,8BAA8B,CAChD,KACF,GACA,GACA,EACA,KAEF,MAAO,IAAIgB,EACThB,EAAO,gBAAgB,IACpB,IAAa,CACZ,MAAM,IAAI,MAAM,+BAA+B,CACjD,KACF,GACA,GACA,EACA,KAEF,GAAI,IAAIgB,EACNhB,EAAO,aAAa,IACjB,IAAa,CACZ,MAAM,IAAI,MAAM,4BAA4B,CAC9C,KACF,GACA,GACA,EACA,KAEF,KAAM,IAAIgB,EACRhB,EAAO,eAAe,IACnB,IAAa,CACZ,MAAM,IAAI,MAAM,8BAA8B,CAChD,KACF,GACA,GACA,EACA,IACF,EAEF,KAAM,CACJ,KAAM,IAAIgB,EACRhB,EAAO,eAAe,IACnB,IAAa,CACZ,MAAM,IAAI,MAAM,8BAA8B,CAChD,KACF,GACA,GACA,EACA,IAEF,MAAO,IAAIgB,EACThB,EAAO,gBAAgB,IACpB,IAAa,CACZ,MAAM,IAAI,MAAM,+BAA+B,CACjD,KACF,GACA,GACA,EACA,GACF,CACF,EAGF,KAAK,gBAAkB,KAAK,WAAW,KAAK,KAC9C,CAEO,gBAAgB2B,EAAkB,CACvC,KAAK,aAAeA,CACtB,CAEA,OAAOL,EAAkB,CACvB,MAAMM,EAAS,KAAK,aAChB,CACE,GAAI,KAAK,MAAM,OAAO,GAAG,EACzB,KAAM,KAAK,MAAM,OAAO,GAAG,EAC3B,KAAM,KAAK,MAAM,OAAO,GAAG,EAC3B,MAAO,KAAK,MAAM,OAAO,GAAG,GAE9B,CAAE,GAAI,GAAO,KAAM,GAAO,KAAM,GAAO,MAAO,IAE5CC,EAAY,KAAK,SACvB,KAAK,SAAW,OAAO,OAAOD,CAAM,EAAE,KAAK,OAAO,EAE9C,CAAC,KAAK,mBAAqB,KAAK,WAClC,KAAK,WACF,OACA,SAAa,QAAQ,KAAK,sBAAuBE,CAAG,CAAC,EACxD,KAAK,kBAAoB,IAGvB,KAAK,UAAY,CAACD,GACpB,KAAK,WAAW,YAAc,EAC9B,KAAK,WAAW,QACP,CAAC,KAAK,UAAYA,GAC3B,KAAK,WAAW,QAGdD,EAAO,IACT,KAAK,GAAK,KAAK,MAAQN,EACvB,KAAK,UAAY,MACRM,EAAO,MAChB,KAAK,GAAK,KAAK,MAAQN,EACvB,KAAK,UAAY,QACRM,EAAO,MAChB,KAAK,GAAK,KAAK,MAAQN,EACvB,KAAK,UAAY,QACRM,EAAO,QAChB,KAAK,GAAK,KAAK,MAAQN,EACvB,KAAK,UAAY,SAGf,KAAK,UACP,KAAK,gBAAkB,KAAK,WAAW,KAAK,KAAK,SAAS,EAC1D,KAAK,gBAAgB,OAAOA,CAAE,IAE1B,KAAK,YAAc,QAAU,KAAK,YAAc,WAClD,KAAK,gBAAkB,KAAK,WAAW,KAAK,KAAK,SAAS,EAC1D,KAAK,gBAAgB,OAAOA,CAAE,EAGpC,CAEA,OACEb,EACAsB,EACAC,EACM,CACN,KAAK,gBAAgB,KAAKvB,EAAKsB,EAASC,EAAS,GAAG,CACtD,CACF,CC9JO,MAAMC,CAAK,CAIhB,YACEhB,EACOiB,EACAC,EACPjB,EACAC,EACAC,EACAgB,EAAwB,IACRhC,EAAe,MAC/BiC,EACA,CARO,YAAAH,EACA,YAAAC,EAKS,UAAA/B,EAGhB,KAAK,SAAW,IAAIY,EAClBC,EACAC,EACAC,EACAC,EACAgB,CAAA,EAGEC,IACF,KAAK,MAAQ,IAAI,MAAMA,CAAS,EAChC,KAAK,MAAM,KAAO,GAClB,KAAK,MAAM,OAAS,EAExB,CAEA,OAAOf,EAAkB,CACvB,KAAK,SAAS,OAAOA,CAAE,CACzB,CAEA,OACEb,EACA6B,EACAC,EACA3B,EACM,CACN,MAAMmB,EAAU,KAAK,OAASO,EACxBN,EAAU,KAAK,OAASO,EAC9B,KAAK,SAAS,KAAK9B,EAAKsB,EAASC,EAASpB,CAAI,CAChD,CACF,CC9CO,MAAM4B,CAAiB,CAG5B,YAAoBC,EAAkB,CAAlB,cAAAA,EAFpB,KAAQ,KAAiC,EAEF,CAEvC,MAAM,MAAsB,CAC1B,MAAMC,EAAW,MAAM,MAAM,KAAK,QAAQ,EAC1C,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,2BAA2B,EAE7C,KAAK,KAAO,MAAMA,EAAS,MAC7B,CAEA,gBAAyB,CACvB,MAAMC,EAAU,OAAO,KAAK,KAAK,IAAI,EAErC,GAAIA,EAAQ,SAAW,EACrB,MAAO,GAGT,MAAMC,EAASD,EAAQ,KAAK,MAAM,KAAK,SAAWA,EAAQ,MAAM,CAAC,EACjE,GAAI,CAACC,GAAU,CAAC,KAAK,KAAKA,CAAM,GAAK,KAAK,KAAKA,CAAM,EAAE,SAAW,EAChE,MAAO,GAET,MAAMC,EAAS,KAAK,KAAKD,CAAM,EAC/B,OAAOC,EAAO,KAAK,MAAM,KAAK,SAAWA,EAAO,MAAM,CAAC,GAAK,EAC9D,CAEA,iBAAiBC,EAAgB,EAAW,CAC1C,GAAI,OAAO,KAAK,KAAK,IAAI,EAAE,SAAW,EACpC,MAAO,GAGT,MAAMC,EAAqB,GAE3B,QAASC,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAC9B,MAAML,EAAU,OAAO,KAAK,KAAK,IAAI,EAC/BC,EAASD,EAAQ,KAAK,MAAM,KAAK,SAAWA,EAAQ,MAAM,CAAC,EACjE,GAAI,CAACC,GAAU,CAAC,KAAK,KAAKA,CAAM,GAAK,KAAK,KAAKA,CAAM,EAAE,SAAW,EAChE,SAEF,MAAMC,EAAS,KAAK,KAAKD,CAAM,EACzBK,EAAQJ,EAAO,KAAK,MAAM,KAAK,SAAWA,EAAO,MAAM,CAAC,GAAK,GACnEE,EAAS,KAAK,KAAK,cAAcE,CAAK,CAAC,CACzC,CACA,OAAOF,EAAS,KAAK,GAAG,CAC1B,CAEQ,cAAcE,EAAuB,CAC3C,MAAMC,EAAQD,EAAM,MAAM,GAAG,EACvBE,EAAQ,KAAK,MAAM,KAAK,SAAW,KAAK,IAAI,EAAGD,EAAM,OAAS,CAAC,CAAC,EAChEE,EAAM,KAAK,IACfF,EAAM,OACNC,EAAQ,KAAK,MAAM,EAAI,KAAK,SAAW,CAAC,GAE1C,OAAOD,EAAM,MAAMC,EAAOC,CAAG,EAAE,KAAK,GAAG,CACzC,CACF,CC7CO,MAAMC,CAAgC,CAAtC,cACL,QAAK,SACL,KAAQ,MAAqB,QAE7B,OAAc,CACR,KAAK,KACX,CAEA,QAAQ7B,EAAe8B,EAAoC,CACzD,MAAMC,EAAO/B,EAAM,cAEnB,OAAQ,KAAK,OACX,IAAK,QAAmB,CACtB,MAAMgC,EAASF,EAAS,iBAAiB,CAAC,EAC1C,YAAK,MAAQ,YACN,8BAA8BE,CAAM,EAC7C,CAEA,IAAK,YACH,OAAIC,EAAYF,EAAM,CAAC,QAAS,IAAI,CAAC,GACnC,KAAK,MAAQ,WAEN,+BADQD,EAAS,gBACoB,IAIvC,sBADQA,EAAS,iBAAiB,CAAC,CACP,GAGrC,IAAK,WACH,OACEG,EAAYF,EAAM,CAChB,OACA,OACA,QACA,QACA,SACA,QACD,GAED,KAAK,MAAQ,UAEN,6CADQD,EAAS,iBAAiB,CAAC,CACgB,IAGrD,iCADQA,EAAS,gBACsB,GAGhD,IAAK,UACH,OACEG,EAAYF,EAAM,CAAC,KAAM,OAAQ,MAAO,OAAQ,SAAU,QAAQ,CAAC,GAEnE,KAAK,MAAQ,WAIN,mBAFQD,EAAS,iBAAiB,CAAC,CAEV,IAG3B,iEADQA,EAAS,gBACsD,GAGhF,IAAK,WACH,YAAK,MAAQ,WAEN,kCADQA,EAAS,iBAAiB,CAAC,CACK,GAGjD,IAAK,WACH,MAAO,8BACT,CAEJ,CACF,CAEA,MAAMG,EAAc,CAACC,EAAkBC,IAC9BA,EAAQ,KAAKC,GAAUF,EAAS,SAASE,CAAM,CAAC,ECpFlD,MAAMC,CAAmB,CAM9B,YAAYpB,EAAkB,CAJ9B,KAAQ,UAA2B,KACnC,KAAQ,oBAAgC,GACxC,KAAQ,WAAa,IAGnB,KAAK,SAAW,IAAID,EAAiBC,CAAQ,EAC7C,KAAK,OAAO,IAAI,SAAU,IAAIY,CAAa,CAC7C,CAEA,MAAM,MAAsB,CAC1B,MAAM,KAAK,SAAS,MACtB,CAEA,kBAAkBS,EAAuB,CACvC,KAAK,UAAYA,EACjB,KAAK,oBAAsB,GAC3B,KAAK,OAAO,IAAIA,CAAO,GAAG,OAC5B,CAEA,iBAAwB,CACtB,KAAK,UAAY,KACjB,KAAK,oBAAsB,EAC7B,CAEA,eAAeC,EAA6B,CAC1C,GAAI,CAAC,KAAK,UACR,MAAM,IAAI,MAAM,8BAA8B,EAGhD,IAAIrB,EAEJ,MAAMsB,EAAQ,KAAK,OAAO,IAAI,KAAK,SAAS,EAC5C,OAAIA,EACFtB,EAAWsB,EAAM,QAAQD,EAAa,KAAK,QAAQ,EAGnDrB,EADe,KAAK,SAET,GACL,KAAK,SAAS,iBAAiB,EAAI,KAAK,MAAM,KAAK,SAAW,CAAC,CAAC,EAChE,KAAK,SAAS,iBAGtB,KAAK,oBAAoB,KAAK,WAAWqB,CAAW,EAAE,EACtD,KAAK,oBAAoB,KAAK,GAAG,KAAK,SAAS,KAAKrB,CAAQ,EAAE,EAEvDA,CACT,CAEA,YAAuB,CACrB,MAAO,CAAC,GAAG,KAAK,mBAAmB,CACrC,CACF,CCrDO,MAAMuB,CAAW,CAsBtB,YAAoBzC,EAAqB,CAArB,WAAAA,EArBpB,KAAQ,OAAS,GACjB,KAAQ,QAAU,GAClB,KAAQ,QAAU,GAClB,KAAQ,MAAgB,GACxB,KAAQ,UAAY,EAEpB,KAAQ,YAAc,EACtB,KAAQ,eAAiB,GACzB,KAAQ,WAAa,GACrB,KAAQ,QAAU,GAClB,KAAQ,UAAY,IACpB,KAAQ,WAAa,GAErB,KAAQ,KAAO,kCACf,KAAQ,SAAW,uCACnB,KAAQ,UAAY,uCAEpB,KAAQ,WAAa,GACrB,KAAQ,UAAY,GACpB,KAAQ,UAA2B,KAsEnC,KAAQ,aAAgB,GAA2B,CACjD,GAAK,KAAK,WAMV,KAJI,EAAE,MAAQ,aAAe,EAAE,MAAQ,SAAW,EAAE,MAAQ,MAC1D,EAAE,iBAGA,EAAE,MAAQ,YAAa,CACzB,KAAK,UAAY,KAAK,UAAU,MAAM,EAAG,EAAE,EAC3C,MACF,CAEA,GAAI,EAAE,MAAQ,QAAS,CACrB,KAAK,UAAY,KAAK,UAAU,OAChC,KAAK,gBACL,MACF,CAEA,GAAI,EAAE,MAAQ,IAAK,CACjB,KAAK,WAAa,IAClB,MACF,CAEI,EAAE,IAAI,SAAW,IACnB,KAAK,WAAa,EAAE,KAExB,CA9F0C,CAE1C,KAAKsC,EAAiBP,EAAoB,CACxC,KAAK,OAAS,GACd,KAAK,QAAUO,EACf,KAAK,QAAUP,EACf,KAAK,MAAQ,GACb,KAAK,UAAY,EACjB,KAAK,YAAc,CACrB,CAEA,OAAc,CACZ,KAAK,OAAS,EAChB,CAEA,UAAoB,CAClB,OAAO,KAAK,MACd,CAEA,UAAoB,CAClB,OAAO,KAAK,UACd,CAEA,mBAAmC,CACjC,MAAM,EAAI,KAAK,UACf,YAAK,UAAY,KACV,CACT,CAEA,OAAOjC,EAAkB,CAGvB,GAFI,CAAC,KAAK,QAEN,KAAK,WAAY,OASrB,GAPA,KAAK,aAAe,KAAK,eAAiBA,EAGxC,KAAK,MAAM,OAAO,GAAG,GACrB,KAAK,MAAM,OAAO,OAAO,GACzB,KAAK,MAAM,OAAO,GAAG,EAEV,CACX,MAAM4C,EAAU,KAAK,sBAAsB,OAEvC,KAAK,YAAcA,EACrB,KAAK,YAAcA,EAEf,KAAK,UAAY,KAAK,MAAM,OAAS,GACvC,KAAK,YACL,KAAK,YAAc,GAEnB,KAAK,OAGX,CACF,CAEA,cAAqB,CACnB,KAAK,WAAa,GAClB,KAAK,UAAY,GACjB,OAAO,iBAAiB,UAAW,KAAK,YAAY,CACtD,CAEA,eAAsB,CACpB,KAAK,WAAa,GAClB,OAAO,oBAAoB,UAAW,KAAK,YAAY,CACzD,CA8BA,cAAuB,CACrB,OAAO,KAAK,SACd,CAEA,OACEzD,EACA0D,EACAC,EACM,CACN,GAAI,CAAC,KAAK,OAAQ,CACZ,KAAK,aACP3D,EAAI,OACJA,EAAI,YAAc,EAClBA,EAAI,UAAY,OAChBA,EAAI,SAAS,GAAI2D,EAAU,GAAID,EAAU,IAAK,EAAE,EAChD1D,EAAI,YAAc,OAClBA,EAAI,WAAW,GAAI2D,EAAU,GAAID,EAAU,IAAK,EAAE,EAClD1D,EAAI,UAAY,OAChBA,EAAI,KAAO,KAAK,UAChBA,EAAI,aAAe,SACnBA,EAAI,SAAS,KAAK,UAAY,IAAK,GAAI2D,EAAU,EAAE,EACnD3D,EAAI,WAEN,MACF,CAEI,KAAK,MAAM,SAAW,GACxB,KAAK,aAAaA,EAAK0D,CAAO,EAEhC,MAAMzD,EAAI,KAAK,QACT2D,EAAIF,EAAU,KAAK,QAAU,EAC7BG,EAAI,KAAK,UACT3D,EAAIyD,EAAUE,EAAI,KAAK,QAE7B7D,EAAI,OAEJA,EAAI,YAAc,GAClBA,EAAI,UAAY,OAChB,KAAK,UAAUA,EAAKC,EAAGC,EAAG0D,EAAGC,EAAG,EAAE,EAClC7D,EAAI,OAEJA,EAAI,YAAc,EAClBA,EAAI,YAAc,YAClBA,EAAI,UAAY,EAChB,KAAK,UAAUA,EAAKC,EAAGC,EAAG0D,EAAGC,EAAG,EAAE,EAClC7D,EAAI,SAEJA,EAAI,KAAO,KAAK,SAChBA,EAAI,UAAY,OAGhBA,EAAI,SAAS,KAAK,QAASC,EAFV,GAEwBC,EADxB,EACuC,EAAE,EAE1D,MAAM4D,EAAS7D,EAAI,KAAK,QAClB8D,EAAS7D,EAAI,KAAK,QAAU,GAAK,KAAK,WAC5CF,EAAI,KAAO,KAAK,KAChBA,EAAI,UAAY,OAChB,MAAMgE,EAAO,KAAK,MAAM,KAAK,SAAS,EACtC,GAAIA,EAAM,CACR,MAAMC,EAAUD,EAAK,KAAK,MAAM,EAAG,KAAK,MAAM,KAAK,WAAW,CAAC,EAC/D,IAAIE,EAAS,EACTC,EAAQJ,EACZ,UAAWK,KAAQJ,EAAK,MAAO,CAC7B,MAAMK,EAAO,KAAK,IAChB,EACA,KAAK,IAAID,EAAK,OAAQH,EAAQ,OAASC,CAAM,GAEzCI,EAAOF,EAAK,MAAM,EAAGC,CAAI,EAC/BrE,EAAI,SAASsE,EAAMR,EAAQK,CAAK,EAChCD,GAAUE,EAAK,OAAS,EACxBD,GAAS,KAAK,UAChB,CAEA,MAAMV,EAAUO,EAAK,KAAK,OAC1B,GAAI,KAAK,aAAeP,EAAS,CAE/B,MAAMc,EADU,KAAK,UAAY,KAAK,MAAM,OAAS,EACzB,IAAM,IAClCvE,EAAI,YAAc,IAClBA,EAAI,SAASuE,EAAWtE,EAAI2D,EAAI,GAAI1D,EAAI2D,EAAI,EAAE,EAC9C7D,EAAI,YAAc,CACpB,CACF,CACAA,EAAI,UAEA,KAAK,aACPA,EAAI,OACJA,EAAI,YAAc,EAClBA,EAAI,UAAY,OAChBA,EAAI,SAAS,GAAI2D,EAAU,GAAID,EAAU,IAAK,EAAE,EAChD1D,EAAI,YAAc,OAClBA,EAAI,WAAW,GAAI2D,EAAU,GAAID,EAAU,IAAK,EAAE,EAElD1D,EAAI,UAAY,OAChBA,EAAI,KAAO,KAAK,UAChBA,EAAI,aAAe,SACnBA,EAAI,SAAS,KAAK,UAAY,IAAK,GAAI2D,EAAU,EAAE,EACnD3D,EAAI,UAER,CAEQ,qBAA8B,CACpC,GAAI,CAAC,KAAK,MAAM,QAAU,CAAC,KAAK,MAAM,KAAK,SAAS,EAAG,MAAO,GAC9D,MAAMgE,EAAO,KAAK,MAAM,KAAK,SAAS,EACtC,OAAOA,EAAOA,EAAK,KAAO,EAC5B,CAEQ,aAAahE,EAA+B0D,EAAuB,CACzE1D,EAAI,OACJA,EAAI,KAAO,KAAK,KAGhB,MAAMwE,EADId,EAAU,KAAK,QAAU,EAChB,KAAK,QAAU,EAC5Be,EAAS,KAAK,UAAY,KAAK,QAAU,EAAI,GAC7CC,EAAe,KAAK,IAAI,EAAG,KAAK,MAAMD,EAAS,KAAK,UAAU,CAAC,EAE/DhC,EAAQ,KAAK,QAAQ,MAAM,KAAK,EAChCkC,EAAkB,GACxB,IAAIC,EAAU,GAEd,UAAWC,KAAQpC,EAAO,CACxB,MAAMqC,EAAOF,EAAUA,EAAU,IAAMC,EAAOA,EAC1C7E,EAAI,YAAY8E,CAAI,EAAE,OAASN,EACjCI,EAAUE,GAENF,GAASD,EAAM,KAAKC,CAAO,EAC/BA,EAAUC,EAEd,CACID,GAASD,EAAM,KAAKC,CAAO,EAE/B,MAAMG,EAAgB,GACtB,QAASxC,EAAI,EAAGA,EAAIoC,EAAM,OAAQpC,GAAKmC,EAAc,CACnD,MAAMM,EAAQL,EAAM,MAAMpC,EAAGA,EAAImC,CAAY,EAC7CK,EAAM,KAAK,CACT,MAAOC,EACP,KAAMA,EAAM,KAAK;AAAA,CAAI,EACtB,CACH,CAEA,KAAK,MAAQD,EAAM,OAASA,EAAQ,CAAC,CAAE,MAAO,CAAC,EAAE,EAAG,KAAM,GAAI,EAC9D/E,EAAI,SACN,CAEQ,UACNA,EACAC,EACAC,EACA0D,EACAC,EACAoB,EACM,CACNjF,EAAI,YACJA,EAAI,OAAOC,EAAIgF,EAAG/E,CAAC,EACnBF,EAAI,MAAMC,EAAI2D,EAAG1D,EAAGD,EAAI2D,EAAG1D,EAAI2D,EAAGoB,CAAC,EACnCjF,EAAI,MAAMC,EAAI2D,EAAG1D,EAAI2D,EAAG5D,EAAGC,EAAI2D,EAAGoB,CAAC,EACnCjF,EAAI,MAAMC,EAAGC,EAAI2D,EAAG5D,EAAGC,EAAG+E,CAAC,EAC3BjF,EAAI,MAAMC,EAAGC,EAAGD,EAAI2D,EAAG1D,EAAG+E,CAAC,EAC3BjF,EAAI,WACN,CACF,CCtRO,MAAMkF,CAAa,CAGxB,YACSC,EACP1E,EACAC,EACAC,EACAgB,EAAwB,GACxB,CALO,cAAAwD,EAMP,MAAMrF,EAAMP,EAAO4F,CAAQ,EAC3B,GAAI,CAACrF,EAAK,MAAM,IAAI,MAAM,0BAA0BqF,CAAQ,EAAE,EAC9D,KAAK,SAAW,IAAI5E,EAClBT,EACAW,EACAC,EACAC,EACAgB,CAAA,CAEJ,CAEA,OAAOyD,EAAyB,CAC9B,KAAK,SAAS,OAAOA,CAAS,CAChC,CAEA,OACEpF,EACAC,EACAC,EACAC,EACM,CACN,KAAK,SAAS,KAAKH,EAAKC,EAAGC,EAAGC,CAAI,CACpC,CACF,CC3BO,MAAMkF,EAAe,MAAOC,GAAoC,CACrE,MAAMrD,EAAW,MAAM,MAAMqD,CAAI,EACjC,GAAI,CAACrD,EAAS,GACZ,MAAM,IAAI,MACR,iCAAiCqD,CAAI,KAAKrD,EAAS,UAAU,IAGjE,MAAMsD,EAAO,MAAMtD,EAAS,OAEtBuD,EAAiBD,EAAK,MAAQ,GAEpC,GAAI,CAACC,EAAK,OACR,MAAM,IAAI,MAAM,gBAAgBF,CAAI,cAAc,EAEpD,MAAMG,EAAQD,EAAK,CAAC,GAAG,QAAU,EACjC,GAAIC,IAAU,EACZ,MAAM,IAAI,MAAM,gBAAgBH,CAAI,sBAAsB,EAE5D,GAAI,CAACE,EAAK,SAAaE,EAAI,SAAWD,CAAK,EACzC,MAAM,IAAI,MAAM,gBAAgBH,CAAI,8BAA8B,EAGpE,MAAO,CACL,OAAQC,EAAK,QAAU,GACvB,KAAAC,EACA,MAAAC,EACA,OAAQD,EAAK,OAEjB,EAEaG,EAAkB,CAC7BC,EACAC,EACAC,IACkB,CAClB,GAAIA,EAAK,GAAKA,GAAMF,EAAM,QAAUC,EAAK,GAAKA,GAAMD,EAAM,MAAO,OAAO,KACxE,MAAMF,EAAME,EAAM,KAAKE,CAAE,EACzB,OAAI,OAAOJ,EAAQ,KAAe,OAAOA,EAAIG,CAAE,EAAM,IAC5C,KAEFH,EAAIG,CAAE,CACf,EC/CO,MAAME,CAAO,CAIlB,YACSC,EACAC,EACAC,EACPC,EACAxF,EACAyF,EAAS,GACTC,EAAS,GACTzF,EAAY,IACZ,CARO,QAAAoF,EACA,WAAAC,EACA,WAAAC,EALT,KAAO,UAAY,GAYjB,MAAMpG,EAAMP,EAAO4G,CAAW,EAC9B,GAAI,CAACrG,EAAK,MAAM,IAAI,MAAM,0BAA0BqG,CAAW,EAAE,EACjE,KAAK,SAAW,IAAI5F,EAClBT,EACAsG,EACAC,EACA1F,EACAC,CAAA,CAEJ,CAEA,OAAOC,EAAkB,CAClB,KAAK,WAAW,KAAK,SAAS,OAAOA,CAAE,CAC9C,CAEA,OACEb,EACA6B,EACAC,EACAwE,EACM,CACN,GAAI,KAAK,UAAW,OACpB,MAAMhF,EAAU,KAAK,MAAQgF,EAAWzE,EAClCN,EAAU,KAAK,MAAQ+E,EAAWxE,EACxC,KAAK,SAAS,KAAK9B,EAAKsB,EAASC,EAAS+E,CAAQ,CACpD,CAEA,KAAKT,EAAYC,EAAqB,CACpC,MAAO,CAAC,KAAK,WAAa,KAAK,QAAUD,GAAM,KAAK,QAAUC,CAChE,CAEA,SAAgB,CACd,KAAK,UAAY,EACnB,CACF,CCnDO,MAAMS,EAAqC,GAErCC,EAAoBC,GACxB,QAAQ,IACbA,EAAK,IAAIC,GACA,IAAI,QAAc,CAAC9G,EAASC,IAAW,CAC5C,MAAMW,EAAQ,IAAI,MAElBA,EAAM,YAAc,YACpBA,EAAM,OAAS,IAAY,CACzB+F,EAAe,KAAK/F,CAAK,EACzBZ,EAAA,CACF,EACAY,EAAM,QAAU,IACdX,EAAO,IAAI,MAAM,yBAAyB6G,CAAG,EAAE,CAAC,EAClDlG,EAAM,IAAMkG,CACd,CAAC,CACF,GACD,KAAK,MAAe,EAGXC,EAAqB,CAACxG,EAAO,MAA2B,CACnE,MAAMyG,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAQzG,EACfyG,EAAO,OAASzG,EAChB,MAAMH,EAAM4G,EAAO,WAAW,IAAI,EAElC,QAASrE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMzC,EACJyG,EAAe,KAAK,MAAM,KAAK,SAAWA,EAAe,MAAM,CAAC,EAClE,GAAI,CAACzG,EAAK,SAEV,MAAM+G,EAAK1G,EAAO,EACZ2G,EAAK3G,EAAO,EACZ4G,EAAK,KAAK,MAAM,KAAK,UAAYjH,EAAI,MAAQ+G,EAAG,EAChDG,EAAK,KAAK,MAAM,KAAK,UAAYlH,EAAI,OAASgH,EAAG,EAEjDG,EAAM1E,EAAI,GAAMpC,EAAO,GACvB+G,EAAK,KAAK,MAAM3E,EAAI,CAAC,GAAKpC,EAAO,GAEvCH,EAAI,UAAUF,EAAKiH,EAAIC,EAAIH,EAAIC,EAAIG,EAAIC,EAAIL,EAAIC,CAAE,CACnD,CAEA,OAAOF,CACT,EC/BMO,EAAY,IAEX,MAAMC,CAAM,CAiCjB,YACUrG,EACAC,EACAC,EACA2E,EACR,CAJQ,WAAA7E,EACA,gBAAAC,EACA,gBAAAC,EACA,WAAA2E,EApCV,KAAQ,QAAU,KAClB,KAAQ,aAAe,IACvB,KAAQ,WAAgCe,EAAmBQ,CAAS,EACpE,KAAQ,aAAe,EACvB,KAAQ,QAAoB,GAC5B,KAAQ,cAAgB,IAExB,KAAQ,MAAgB,GACxB,KAAQ,UAA6C,KAErD,KAAQ,mBAAqB,GAE7B,KAAQ,QAAU,EAClB,KAAQ,QAAU,EAElB,KAAQ,WAAuB,CAAC,QAAS,QAAS,QAAS,OAAO,EAElE,KAAQ,cAAgB,IAKxB,KAAQ,aAAe,IAEvB,KAAQ,UAAY,EACpB,KAAQ,UAAY,EAIpB,KAAQ,eAAgC,KACxC,KAAQ,kBAAoB,IA0K5B,WAAQ,IAlKN,KAAK,OAAS,IAAIrG,EAAO,KAAK,MAAO,KAAK,WAAY,KAAK,UAAU,EACrE,MAAMuG,EAAU9H,EAAO,UAAU,EACjC,GAAI,CAAC8H,EACH,MAAM,IAAI,MAAM,4CAA4C,EAE9D,KAAK,MAAM,KACT,IAAI7F,EACF6F,EACA,IACA,IACA,GACA,GACA,EACA,IACA,SACA,kBACF,EAGF,MAAMC,EAAS/H,EAAO,YAAY,EAClC,GAAI,CAAC+H,EACH,MAAM,IAAI,MAAM,gDAAgD,EAElE,KAAK,MAAM,KACT,IAAI9F,EACF8F,EACA,IACA,IACA,GACA,GACA,GACA,IACA,SACA,oBACF,EAGF,KAAK,WAAa,IAAI9D,EAAW,KAAK,KAAK,EAC3C,KAAK,gBAAkB,IAAIJ,EAAmB,uBAAuB,EACrE,KAAK,gBAAgB,OAAO,MAAM/B,GAAO,CACvC,MAAM,IAAI,MAAM,iCAAiCA,CAAG,EAAE,CACxD,CAAC,EAED,KAAK,QAAQ,KAAK,IAAI0E,EAAO,OAAQ,EAAG,EAAG,WAAY,GAAI,GAAI,GAAI,GAAI,CAAC,CAC1E,CAEQ,SAASF,EAAYC,EAAoB,CAC/C,MAAM7F,EAAI4F,EAAK,EACb3F,EAAI4F,EAAK,EACX,IAAIjC,EAAK5D,EAAI,UAAYC,EAAI,UAAY,KAAK,QAAU,aAAgB,EAExE,OAAA2D,GAAKA,GAAK,GACVA,KAAO,EACPA,GAAKA,GAAK,GACVA,KAAO,EACPA,GAAKA,GAAK,EACVA,KAAO,GACCA,IAAM,GAAK,UACrB,CAEQ,SAASgC,EAAYC,EAAqB,CAChD,MAAMyB,EAAI,GAAG1B,CAAE,IAAIC,CAAE,GACf0B,EAAS,KAAK,SAAS,IAAID,CAAC,EAClC,GAAIC,IAAW,OAAW,OAAOA,EAEjC,MAAMC,EAAK9B,EAAgB,KAAK,MAAOE,EAAIC,CAAE,EAC7C,GAAI2B,IAAO,KAAOA,IAAO,IACvB,YAAK,SAAS,IAAIF,EAAG,EAAK,EACnB,GAIT,MAAMG,EADI,KAAK,SAAS7B,EAAIC,CAAE,EACX,IACnB,YAAK,SAAS,IAAIyB,EAAGG,CAAM,EACpBA,CACT,CAEQ,cAAc7G,EAAkB,CACtC,UAAW8G,KAAK,KAAK,QAASA,EAAE,OAAO9G,CAAE,CAC3C,CAEQ,kBAAyB,CAC/B,GAAI,CAAC,KAAK,MAAM,OAAO,GAAG,EAAG,OAE7B,MAAM+G,EAAK,KAAK,QACVC,EAAK,KAAK,QACVC,EAAQX,EAAY,GAE1B,UAAWQ,KAAK,KAAK,QAAS,CAC5B,MAAMI,EAAKJ,EAAE,MAAQR,EAAYA,EAAY,EACvCa,EAAKL,EAAE,MAAQR,EAAYA,EAAY,EACvCF,EAAKc,EAAKH,EACVV,EAAKc,EAAKH,EAChB,GAAI,KAAK,KAAKZ,EAAKA,EAAKC,EAAKA,CAAE,EAAIY,EAAO,CACxCH,EAAE,UACF,KAAK,UAAU,IAAIA,EAAE,EAAE,EAEvB,KACF,CACF,CACF,CAEQ,mBAAmB9B,EAAYC,EAAqB,CAC1D,OAAO,KAAK,QAAQ,KAAK6B,GAAKA,EAAE,KAAK9B,EAAIC,CAAE,CAAC,CAC9C,CAEQ,eAAeD,EAAYC,EAAqB,CACtD,MAAM2B,EAAK9B,EAAgB,KAAK,MAAOE,EAAIC,CAAE,EAC7C,OAAI2B,IAAO,KAAOA,IAAO,IAAY,GAE9B,CAAC,KAAK,SAAS5B,EAAIC,CAAE,CAC9B,CAEQ,gBAAgBD,EAAYC,EAAqB,CACvD,OAAO,KAAK,MAAM,KAAKmC,GAAO,CAC5B,MAAMC,EAAK,KAAK,MAAMD,EAAI,OAASd,CAAS,EACtCgB,EAAK,KAAK,MAAMF,EAAI,OAASd,CAAS,EAC5C,OAAOe,IAAOrC,GAAMsC,IAAOrC,CAC7B,CAAC,CACH,CAEA,eAAesC,EAAkC,CAC/C,KAAK,KAAOA,CACd,CAEQ,QAAQnC,EAAeC,EAAsC,CACnE,MAAM5F,EAAM,GAAG2F,CAAK,IAAIC,CAAK,GACvBmC,EAAM,YAAY,MAElBb,EAAS,KAAK,UAAU,IAAIlH,CAAG,EACrC,GAAIkH,GAAUa,EAAMb,EAAO,KAAO,KAAK,oBAAqBA,EAAO,KAEnE,IAAIc,EAEJ,MAAMb,EAAK9B,EAAgB,KAAK,MAAOM,EAAOC,CAAK,EACnD,GAAIuB,IAAO,IACJ,KAAK,cAAc,IAAInH,CAAG,GAC7B,KAAK,cAAc,IACjBA,EACA,IAAI4E,EAAa,YAAa,GAAI,GAAI,GAAI,GAAI,GAGlDoD,EAAS,KAAK,cAAc,IAAIhI,CAAG,UAC1BmH,IAAO,KAAOA,IAAO,KAC9B,GAAI,KAAK,SAASxB,EAAOC,CAAK,EAC5BoC,EAAS,YACJ,CACL,MAAMC,EAAe,CAAC,QAAS,QAAS,OAAO,EAI/CD,EAFEC,EAAa,KAAK,MAAM,KAAK,SAAWA,EAAa,MAAM,CAAC,GAC5D,OAEJ,MAEAD,EACE,CAAC,QAAS,QAAS,OAAO,EAAE,KAAK,MAAM,KAAK,SAAW,CAAC,CAAC,GAAK,QAGlE,YAAK,UAAU,IAAIhI,EAAK,CAAE,KAAMgI,EAAQ,KAAMD,EAAK,EAC5CC,CACT,CAIA,OAAOzH,EAAkB,CACvB,KAAK,cAAgBA,EACjB,KAAK,aAAe,IACtB,KAAK,WAAa8F,EAAmBQ,CAAS,EAC9C,KAAK,aAAe,GAEtB,UAAWqB,KAAQ,KAAK,cAAc,SACpCA,EAAK,OAAO3H,CAAE,EAEhB,KAAK,cAAcA,CAAE,EACrB,MAAM4H,EAAa,KAAK,WAAW,WASnC,GAPIA,GAAc,KAAK,YACrB,KAAK,QAAU,KAAK,UAAU,EAC9B,KAAK,QAAU,KAAK,UAAU,GAGhC,KAAK,OAAO,gBAAgB,CAACA,CAAU,EAElCA,EAmCE,CACL,KAAK,WAAW,OAAO5H,CAAE,EACzB,MAAM6H,EAAY,KAAK,WAAW,oBAClC,GAAIA,EAAW,CACb,MAAMzG,EAAW,KAAK,gBAAgB,eAAeyG,CAAS,EACxDC,EAAQ,KAAK,gBAAkB,MACrC,KAAK,WAAW,KAAKA,EAAO1G,CAAQ,CACtC,CACF,KA3CiB,CACf,MAAM2G,EAAO,KAAK,MAAQ/H,EAE1B,IAAIoG,EAAK,EACPC,EAAK,EAMP,GALI,KAAK,MAAM,OAAO,GAAG,IAAGD,GAAM2B,GAC9B,KAAK,MAAM,OAAO,GAAG,IAAG3B,GAAM2B,GAC9B,KAAK,MAAM,OAAO,GAAG,IAAG1B,GAAM0B,GAC9B,KAAK,MAAM,OAAO,GAAG,IAAG1B,GAAM0B,GAE9B3B,IAAO,EAAG,CACZ,MAAM4B,EAAQ,KAAK,QAAU5B,EACvB,CAAE,GAAAc,EAAI,GAAAC,GAAO,KAAK,oBAAoBa,EAAO,KAAK,OAAO,EAE7D,KAAK,eAAed,EAAIC,CAAE,GAC1B,CAAC,KAAK,gBAAgBD,EAAIC,CAAE,GAC5B,CAAC,KAAK,mBAAmBD,EAAIC,CAAE,IAE/B,KAAK,QAAUa,EAEnB,CAEA,GAAI3B,IAAO,EAAG,CACZ,MAAM4B,EAAQ,KAAK,QAAU5B,EACvB,CAAE,GAAAa,EAAI,GAAAC,GAAO,KAAK,oBAAoB,KAAK,QAASc,CAAK,EAE7D,KAAK,eAAef,EAAIC,CAAE,GAC1B,CAAC,KAAK,gBAAgBD,EAAIC,CAAE,GAC5B,CAAC,KAAK,mBAAmBD,EAAIC,CAAE,IAE/B,KAAK,QAAUc,EAEnB,CAEA,KAAK,qBACP,CAUA,KAAK,mBAEL,MAAMC,EAAe,KAAK,MAAM,KAAK,QAAU5B,CAAS,EAClD6B,EAAe,KAAK,MAAM,KAAK,QAAU7B,CAAS,GAEpD4B,IAAiB,KAAK,WAAaC,IAAiB,KAAK,aAC3D,KAAK,cAAcD,EAAcC,CAAY,EAC7C,KAAK,UAAYD,EACjB,KAAK,UAAYC,GAEnB,KAAK,OAAO,OAAOnI,CAAE,EAErB,KAAK,MAAM,QAAQoI,GAAUA,EAAO,OAAOpI,CAAE,CAAC,EAE9C,UAAWoH,KAAO,KAAK,MAAO,CAC5B,GAAI,CAACA,EAAI,MAAO,SAEhB,MAAMhB,EAAKgB,EAAI,OAAS,KAAK,QACvBf,EAAKe,EAAI,OAAS,KAAK,QACvBiB,EAAO,KAAK,KAAKjC,EAAKA,EAAKC,EAAKA,CAAE,EAElCiC,EAAU,IAChB,IAAIC,EAAe,EAEfF,EAAOC,IACTC,EAAe,EAAIF,EAAOC,GAGxBC,EAAe,GAAKnB,EAAI,MAAM,OAChCA,EAAI,MAAM,OAAO,SAAa,QAAQ,KAAK,iBAAkB5G,CAAG,CAAC,EACxD+H,GAAgB,GAAK,CAACnB,EAAI,MAAM,QACzCA,EAAI,MAAM,QAGZA,EAAI,MAAM,SAAWmB,EAAenB,EAAI,MAAM,QAAU,EAC1D,CACA,MAAMoB,EAAW,KAAK,WAAW,WAC7B,CAAC,KAAK,oBAAsBA,EAC9B,KAAK,MAAM,OACF,KAAK,oBAAsB,CAACA,IACrC,KAAK,MAAM,OACX,KAAK,WAAW,gBAChB,KAAK,UAAY,KACjB,KAAK,MAAM,WAEb,KAAK,mBAAqBA,CAC5B,CAEQ,qBAA4B,CAClC,GAAI,CAAC,KAAK,MAAM,OAAO,GAAG,EAAG,OAE7B,MAAMC,EAAS,IACf,IAAIC,EAAoB,KACpBC,EAAa,IAEjB,UAAWvB,KAAO,KAAK,MAAO,CAC5B,MAAMhB,EAAKgB,EAAI,OAAS,KAAK,QACvBf,EAAKe,EAAI,OAAS,KAAK,QACvBwB,EAAKxC,EAAKA,EAAKC,EAAKA,EACtBuC,EAAKH,EAASA,GAAUG,EAAKD,IAC/BD,EAAOtB,EACPuB,EAAaC,EAEjB,CAEIF,GACF,KAAK,UAAUA,EAAK,IAAI,CAE5B,CAEQ,cAActD,EAAeC,EAAqB,CACxD,QAAShG,EAAI,GAAIA,GAAK,EAAGA,IACvB,QAASD,EAAI,GAAIA,GAAK,EAAGA,IAAK,CAC5B,MAAMK,EAAM,GAAG2F,EAAQhG,CAAC,IAAIiG,EAAQhG,CAAC,GACrC,KAAK,UAAU,OAAOI,CAAG,CAC3B,CAEJ,CAEA,OAAOoJ,EAA0B,CAC/B,MAAMC,EAAc,OAAO,WACrBC,EAAe,OAAO,YAEtB/H,EAAU,KAAK,QAAU8H,EAAc,EACvC7H,EAAU,KAAK,QAAU8H,EAAe,EAExCC,EAAa,KAAK,MAAMhI,EAAUsF,CAAS,EAAI,EAC/C2C,EAAa,KAAK,MAAMhI,EAAUqF,CAAS,EAAI,EAC/C4C,EAAW,KAAK,MAAMlI,EAAU8H,GAAexC,CAAS,EAAI,EAC5D6C,EAAW,KAAK,MAAMlI,EAAU8H,GAAgBzC,CAAS,EAAI,EAEnE,QAASjB,EAAQ4D,EAAY5D,EAAQ8D,EAAU9D,IAC7C,QAASD,EAAQ4D,EAAY5D,EAAQ8D,EAAU9D,IAAS,CACtD,MAAM3E,EAAU2E,EAAQkB,EAAYtF,EAC9BN,EAAU2E,EAAQiB,EAAYrF,EAEpC,GAAI6D,EAAgB,KAAK,MAAOM,EAAOC,CAAK,IAAM,IAAK,CACrDwD,EAAS,IAAI,UACX,KAAK,WACLpI,EACAC,EACA4F,EACAA,CAAA,EAEF,QACF,CAEA,MAAM8C,EAAI,KAAK,QAAQhE,EAAOC,CAAK,EACnC,GAAK+D,EACL,GAAI,OAAOA,GAAM,SAAU,CACzB,MAAMnK,EAAMP,EAAO0K,CAAC,EAChBnK,GAAK4J,EAAS,UAAU5J,EAAKwB,EAASC,EAAS4F,CAAS,CAC9D,MACE8C,EAAE,OAAOP,EAAS,IAAKpI,EAASC,EAAS4F,CAAS,CAEtD,CAEF,UAAWQ,KAAK,KAAK,QACnBA,EAAE,OAAO+B,EAAS,IAAK7H,EAASC,EAASqF,CAAS,EAEpD,MAAMS,EAAK+B,EAAc,EAAI,GACvB9B,EAAK+B,EAAe,EAAI,GAE9B,KAAK,OAAO,OAAOF,EAAS,IAAK9B,EAAIC,CAAE,EACvC,KAAK,MAAM,QAAQqC,GAAQ,CACzBA,EAAK,OAAOR,EAAS,IAAK7H,EAASC,EAASqF,CAAS,CACvD,CAAC,EACD,KAAK,WAAW,OAAOuC,EAAS,IAAKC,EAAaC,CAAY,CAChE,CACQ,oBACNhC,EAAK,KAAK,QACVC,EAAK,KAAK,QACkB,CAC5B,MAAME,EAAK,KAAK,OAAOH,EAAKT,EAAY,GAAKA,CAAS,EAChDa,EAAK,KAAK,OAAOH,EAAKV,EAAY,GAAKA,CAAS,EACtD,MAAO,CAAE,GAAAY,EAAI,GAAAC,CAAA,CACf,CAEQ,UAAU3E,EAAuB,CACvC,KAAK,eAAiBA,EACtB,KAAK,UAAY,CAAE,EAAG,KAAK,QAAS,EAAG,KAAK,SAC5C,KAAK,gBAAgB,kBAAkBA,CAAO,EAC9C,KAAK,WAAW,KAAK,MAAO,EAAE,EAC9B,KAAK,WAAW,eAChB,KAAK,MAAM,SACb,CACF,CCtaO,MAAM8G,CAAK,CAOhB,YACUvD,EACA5F,EACAC,EACA2E,EACR,CAJQ,YAAAgB,EACA,gBAAA5F,EACA,gBAAAC,EACA,WAAA2E,EANV,KAAQ,SAAW,EAQjB,KAAK,IAAMgB,EAAO,WAAW,IAAI,EACjC,KAAK,SAAW,IAAI7G,EAAS,KAAK,GAAG,EACrC,KAAK,MAAQ,IAAIK,EACjB,KAAK,MAAQ,IAAIgH,EACf,KAAK,MACL,KAAK,WACL,KAAK,WACL,KAAK,OAGP,OAAO,iBAAiB,SAAU,IAAM,KAAK,QAAQ,EACrD,KAAK,QACP,CAEO,eAAegB,EAAkC,CAErD,KAAa,OAAO,iBAAiBA,CAAO,CAC/C,CAEQ,QAAe,CACrB,KAAK,OAAO,MAAQ,OAAO,WAC3B,KAAK,OAAO,OAAS,OAAO,WAC9B,CAEO,OAAc,CACnB,sBAAsB,KAAK,KAAK,KAAK,IAAI,CAAC,CAC5C,CAEQ,KAAKgC,EAAoB,CAC/B,MAAMvJ,GAAMuJ,EAAO,KAAK,UAAY,IACpC,KAAK,SAAWA,EAEhB,KAAK,MAAM,OAAOvJ,CAAE,EACpB,KAAK,SAAS,QACd,KAAK,MAAM,OAAO,KAAK,QAAQ,EAE/B,sBAAsB,KAAK,KAAK,KAAK,IAAI,CAAC,CAC5C,CACF,+kCCpDO,MAAMwJ,CAAkB,CA2B7B,YACUC,EAAmB,sHAC3B,CADQ,cAAAA,EA3BV,KAAQ,aAAsC,KAC9C,KAAiB,aAAe,GAChC,KAAiB,cAAgB,IACjC,KAAQ,SAAW,CAAE,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,MAAO,EAAG,MAAO,IAC9D,KAAQ,aAAe,IACvB,KAAQ,eAAiB,EACzB,KAAQ,UAAY,IACpB,KAAQ,YAAc,KACtB,KAAQ,cAAgB,EACxB,KAAiB,cAAgB,EAKjC,KAAQ,QAAU,GAElB,KAAQ,MAAuB,KAC/B,KAAQ,cAAgB,GACxB,KAAQ,UAAY,EACpB,KAAQ,mBAAqB,EAC7B,KAAQ,WAAsC,KAE9C,KAAQ,UAAY,IAAI,MACxB,KAAQ,WAAa,GACrB,KAAQ,YAAc,GAoItB,KAAQ,KAAO,IAAY,CACzB,GAAI,CAAC,KAAK,QAAS,OAEnB,KAAK,QAAQ,OACb,KAAK,QAAQ,UAAU,KAAK,OAAO,MAAO,CAAC,EAC3C,KAAK,QAAQ,MAAM,GAAI,CAAC,EAExB,KAAK,QAAQ,UAAU,EAAG,EAAG,KAAK,OAAO,MAAO,KAAK,OAAO,MAAM,EAClE,KAAK,QAAQ,UACX,KAAK,MACL,EACA,EACA,KAAK,OAAO,MACZ,KAAK,OAAO,QAGd,MAAMC,EAAK,KAAK,MAAM,YAEtB,GAAI,KAAK,YAAcA,IAAO,KAAK,cAAe,CAEhD,GADA,KAAK,WAAa,KAAK,UAAY,GAAK,KAAK,mBACzC,KAAK,YAAc,EAAG,CAKxB,MAAMC,EAJM,KAAK,WAAW,eAC1B,KAAK,MACL,YAAY,KAAI,GAEA,gBAAgB,CAAC,EAE/BA,GACF,KAAK,wBAAwBA,CAAI,EACjC,KAAK,eAAiB,KAAK,eAClB,KAAK,eAAiB,GAC/B,KAAK,gBAET,CAEA,KAAK,cAAgBD,CACvB,CAEI,KAAK,SAAS,OAAS,KAAK,eAAiB,GAC/C,KAAK,mBAGH,KAAK,eACP,KAAK,aAAa,OAAO,EAAI,EAAE,EAC/B,KAAK,wBAEP,KAAK,QAAQ,UACb,KAAK,MAAQ,sBAAsB,KAAK,IAAI,CAC9C,EA/KE,MAAMnC,EAAU,SAAS,cACvB,iBAEIxB,EAAS,SAAS,eACtB,cAEF,GAAI,CAACwB,GAAW,CAACxB,EACf,MAAM,IAAI,MACR,4EAGJ,KAAK,eAAiBwB,EACtB,KAAK,OAASxB,EAEd,MAAM5G,EAAM,KAAK,OAAO,WAAW,IAAI,EACvC,GAAI,CAACA,EAAK,MAAM,IAAI,MAAM,iCAAiC,EAC3D,KAAK,QAAUA,EAEf,KAAK,MAAQ,SAAS,cAAc,OAAO,EAC3C,KAAK,MAAM,YAAc,GACzB,KAAK,MAAM,MAAQ,GACnB,KAAK,MAAM,SAAW,GAEtB,MAAMyK,EAAY,IAAI,MACtBA,EAAU,IAAM,mBAChBA,EAAU,OAAS,IAAY,CAC7B,KAAK,aAAe,IAAIlK,EAAekK,EAAW,IAAK,IAAK,EAAG,EAAG,CACpE,CACF,CAEA,MAAM,MAAsB,CAC1B,GAAI,KAAK,YAAa,OAEtB,IAAIC,EAAqBC,EACzB,GAAI,EACD,CAAE,eAAAD,EAAgB,gBAAAC,CAAA,EAAoB,MAAAC,EAAA,IAAM,OAC3C,6BACF,MACF,MAAQ,CACN,MAAM,IAAI,MACR,2DAEJ,CAEA,MAAMC,EAAS,MAAMF,EAAgB,eACnC,oEAGF,KAAK,WAAa,MAAMD,EAAe,kBAAkBG,EAAQ,CAC/D,YAAa,CACX,eAAgB,KAAK,UAEvB,YAAa,QACb,SAAU,EACX,EAED,IAAIC,EAEJ,KAAK,OAAO,MAAQ,IACpB,KAAK,OAAO,OAAS,IACrB,GAAI,CACFA,EAAS,MAAM,UAAU,aAAa,aAAa,CACjD,MAAO,CACL,MAAO,CAAE,MAAO,KAChB,OAAQ,CAAE,MAAO,IACjB,WAAY,QAEd,MAAO,GACR,CACH,OAASzJ,EAAU,CACjB,MAAIA,GAAK,OAAS,kBACV,IAAI,MAAM,+BAA+B,EAE3C,IAAI,MAAM,0BAA0B,CAC5C,CAEA,KAAK,MAAM,UAAYyJ,EAEvB,MAAM,IAAI,QAAclL,GAAW,CACjC,MAAMmL,EAAS,IAAY,CACzB,KAAK,MAAM,oBAAoB,iBAAkBA,CAAM,EACvDnL,EAAA,CACF,EACI,KAAK,MAAM,YAAc,EAAGA,EAAA,EAC3B,KAAK,MAAM,iBAAiB,iBAAkBmL,CAAM,CAC3D,CAAC,EAED,GAAI,CACF,MAAM,KAAK,MAAM,MACnB,MAAQ,CACN,MAAM,IAAI,MACR,iEAEJ,CAEA,KAAK,YAAc,EACrB,CAEA,MAAM,MAAsB,CAC1B,MAAM,KAAK,OACX,KAAK,eAAe,MAAM,QAAU,QAC/B,KAAK,UACR,KAAK,QAAU,GACf,KAAK,cAAgB,GACrB,KAAK,OAET,CAEA,MAAa,CACX,KAAK,eAAe,MAAM,QAAU,OACpC,KAAK,QAAU,GACX,KAAK,OAAS,OAChB,qBAAqB,KAAK,KAAK,EAC/B,KAAK,MAAQ,KAEjB,CAEA,MAAM,SAAyB,CAC7B,KAAK,OACU,KAAK,MAAM,WAClB,YAAY,QAAQd,GAAKA,EAAE,MAAM,EACzC,KAAK,MAAM,UAAY,KACvB,KAAK,YAAY,UACjB,KAAK,WAAa,KAClB,KAAK,YAAc,EACrB,CAoDQ,sBAA6B,CACnC,GAAI,CAAC,KAAK,aAAc,OACxB,KAAM,CAAE,GAAAlC,EAAI,GAAAC,EAAI,MAAAgD,EAAO,MAAAC,CAAA,EAAU,KAAK,SAGhCC,EAFI,KAAK,OAAO,MAEPnD,EAAK,KAAK,cACnBoD,EAAgB,CAACF,EAEvB,KAAK,QAAQ,OACb,KAAK,QAAQ,UAAUC,EAAIlD,CAAE,EAC7B,KAAK,QAAQ,OAAOmD,CAAa,EAEjC,KAAK,aAAa,KAAK,KAAK,QAAS,CAACH,EAAQ,EAAG,CAACA,EAAQ,EAAGA,CAAK,EAClE,KAAK,QAAQ,SACf,CAEQ,wBACNI,EACM,CACN,MAAMC,EAAI,KAAK,OAAO,MAChBC,EAAI,KAAK,OAAO,OAEhBC,EAAIH,EAAU,KAAK,YAAY,EAC/BI,EAAIJ,EAAU,KAAK,aAAa,EACtC,GAAI,CAACG,GAAK,CAACC,EAAG,OAEd,MAAMC,EAAKF,EAAE,EAAIF,EACfK,EAAKH,EAAE,EAAID,EACPK,EAAKH,EAAE,EAAIH,EACfO,EAAKJ,EAAE,EAAIF,EAEPvD,GAAM0D,EAAKE,GAAM,GACjB3D,GAAM0D,EAAKE,GAAM,GAEjBX,EAAQ,KAAK,MAAMW,EAAKF,EAAIC,EAAKF,CAAE,EACnCI,EAAU,KAAK,MAAMF,EAAKF,EAAIG,EAAKF,CAAE,EAErCI,EAAQD,EAAU,EAElBE,EAAS,CACb,GAAAhE,EACA,GAAIC,EAAK,KAAK,YAAc8D,EAC5B,MAAO,KAAK,UAAYD,EACxB,MAAAZ,CAAA,EAGF,GAAI,CAAC,KAAK,SAAS,MACjB,KAAK,SAAW,CAAE,GAAGc,EAAQ,MAAO,QAC/B,CACL,MAAMC,EAAI,KAAK,aACbC,EAAI,EAAID,EACV,KAAK,SAAS,GAAKA,EAAID,EAAO,GAAKE,EAAI,KAAK,SAAS,GACrD,KAAK,SAAS,GAAKD,EAAID,EAAO,GAAKE,EAAI,KAAK,SAAS,GACrD,KAAK,SAAS,MAAQD,EAAID,EAAO,MAAQE,EAAI,KAAK,SAAS,MAC3D,KAAK,SAAS,MAAQD,EAAID,EAAO,MAAQE,EAAI,KAAK,SAAS,KAC7D,CACF,CAEQ,kBAAyB,CAC/B,GAAI,CAAC,KAAK,WAAY,OACtB,MAAMZ,EAAI,KAAK,OAAO,MAEhB,CAAE,GAAAtD,EAAI,GAAAC,EAAI,MAAAgD,EAAO,MAAAC,CAAA,EAAU,KAAK,SAEhCC,EAAKG,EAAItD,EAAK,KAAK,cACnBoD,EAAgB,CAACF,EAEvB,KAAK,QAAQ,OACb,KAAK,QAAQ,UAAUC,EAAIlD,CAAE,EAC7B,KAAK,QAAQ,OAAOmD,CAAa,EAEjC,MAAMvH,EAAIoH,EACJnH,EAAImH,EACV,KAAK,QAAQ,UAAU,KAAK,UAAW,CAACpH,EAAI,EAAG,CAACC,EAAI,EAAGD,EAAGC,CAAC,EAC3D,KAAK,QAAQ,SACf,CACF,CC1RA,MAAMqI,EAAoB,SAA2B,CACnD,MAAMjK,EAAW,MAAM,MAAM,qBAAqB,EAClD,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,gCAAgCA,EAAS,UAAU,EAAE,EAEvE,MAAMkK,EAAO,MAAMlK,EAAS,OAC5B,MAAMuE,EAAiB2F,EAAK,MAAM,CACpC,EACM3B,EAAO,IAAIH,EAEXrJ,EAAa,IAAI,MAAM,qBAAqB,EAClDA,EAAW,KAAO,GAElB,MAAMC,EAAa,IAAI,MAAM,iBAAiB,EAC9CA,EAAW,KAAO,GAElB,MAAMmL,EAAa,CACjB,QACA,QACA,QACA,QACA,iBACA,gBACA,cACA,gBACA,iBACA,gBACA,WACA,aACA,YACA,YACA,UACF,EAEA,OAAO,iBAAiB,OAAQ,SAAY,CAC1C,MAAM5M,EAAW4M,CAAU,EAC3B,MAAMF,EAAA,EACN,MAAMtG,EAAQ,MAAMP,EAAa,mBAAmB,EAC9CuB,EAAS,SAAS,eAAe,YAAY,EAC7CyF,EAAO,IAAIlC,EAAKvD,EAAQ5F,EAAYC,EAAY2E,CAAK,EAC3DyG,EAAK,eAAe7B,CAAI,EACxB,MAAM8B,EAAS,IAAY,CACzB9B,EAAK,OAAO,MAAM,QAAQ,IAAI,EAC9B,OAAO,oBAAoB,QAAS8B,CAAM,EAC1C,OAAO,oBAAoB,UAAWA,CAAM,CAC9C,EACA,OAAO,iBAAiB,QAASA,CAAM,EACvC,OAAO,iBAAiB,UAAWA,CAAM,EAEzCD,EAAK,QAGJ,OAAe,KAAO7B,CACzB,CAAC","names":["assets","loadAssets","names","promises","name","resolve","reject","img","Renderer","ctx","x","y","size","InputHandler","event","key","SpriteAnimator","image","frameWidth","frameHeight","frameCount","frameTime","dt","Player","input","horseSound","soundtrack","v","moving","wasMoving","err","screenX","screenY","Duck","worldX","worldY","frameDuration","audioPath","cameraX","cameraY","NPCQuoteComposer","jsonPath","response","authors","author","quotes","parts","segments","i","quote","words","start","end","DancerBrain","composer","text","flavor","includesAny","haystack","needles","needle","NPCDialogueManager","npcName","playerInput","brain","DialogueUI","fullLen","screenW","screenH","w","h","innerX","innerY","page","visible","cursor","drawY","line","take","part","indicator","innerW","innerH","linesPerPage","lines","current","word","test","pages","chunk","r","TileAnimator","tileName","deltaTime","loadWorldMap","path","json","rows","width","row","getWorldMapChar","world","tx","ty","Pickup","id","tileX","tileY","spriteSheet","frameW","frameH","tileSize","collageSources","loadRandomImages","urls","url","makeCollageTexture","canvas","sw","sh","sx","sy","dx","dy","TILE_SIZE","Scene","lilDuck","dancer","k","cached","ch","isWall","p","px","py","range","cx","cy","npc","nx","ny","overlay","now","result","grassOptions","anim","inDialogue","submitted","label","step","nextX","nextY","currentTileX","currentTileY","sprite","dist","maxDist","targetVolume","isActive","radius","best","bestDistSq","d2","renderer","screenWidth","screenHeight","startTileX","startTileY","endTileX","endTileY","t","duck","Game","time","FaceFilterOverlay","modelUrl","vt","face","maskSheet","FaceLandmarker","FilesetResolver","__vitePreload","vision","stream","onMeta","scale","angle","mx","mirroredAngle","landmarks","W","H","L","R","Lx","Ly","Rx","Ry","eyeDist","faceH","target","a","b","loadCollageImages","data","ASSET_LIST","game","unlock"],"ignoreList":[],"sources":["../../src/assets.ts","../../src/renderer.ts","../../src/inputHandler.ts","../../src/spriteAnimator.ts","../../src/player.ts","../../src/duck.ts","../../src/npcQuoteComposer.ts","../../src/dancerBrain.ts","../../src/npcDialogueManager.ts","../../src/dialogueUI.ts","../../src/tileAnimator.ts","../../src/worldMap.ts","../../src/pickup.ts","../../src/collage.ts","../../src/scene.ts","../../src/game.ts","../../src/faceFilterOverlay.ts","../../src/main.ts"],"sourcesContent":["export const assets: { [key: string]: HTMLImageElement } = {};\nexport const loadAssets = (names: string[]): Promise<void> => {\n  const promises = names.map(name => {\n    return new Promise<void>((resolve, reject) => {\n      const img = new Image();\n      img.src = `assets/${name}`;\n      img.onload = (): void => {\n        assets[name] = img;\n        resolve();\n      };\n      img.onerror = (): void => {\n        reject(new Error(`Failed to load asset: ${name}`));\n      };\n    });\n  });\n\n  return Promise.all(promises).then(() => undefined);\n};\n","export class Renderer {\n  constructor(public ctx: CanvasRenderingContext2D) {}\n\n  clear(): void {\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  drawImage(img: HTMLImageElement, x: number, y: number, size: number): void {\n    this.ctx.drawImage(img, x, y, size, size);\n  }\n}\n","export class InputHandler {\n  private keys = new Set<string>();\n\n  constructor() {\n    window.addEventListener('keydown', event => {\n      this.keys.add(event.key.toLowerCase());\n    });\n    window.addEventListener('keyup', event => {\n      this.keys.delete(event.key.toLowerCase());\n    });\n  }\n\n  isDown(key: string): boolean {\n    return this.keys.has(key);\n  }\n\n  clear(): void {\n    this.keys.clear();\n  }\n}\n","export class SpriteAnimator {\n  private currentFrame = 0;\n  private currentTime = 0;\n\n  constructor(\n    private image: HTMLImageElement,\n    private frameWidth: number,\n    private frameHeight: number,\n    private frameCount: number,\n    private frameTime: number\n  ) {}\n  update(dt: number): void {\n    this.currentTime += dt;\n    if (this.currentTime >= this.frameTime) {\n      this.currentTime = 0;\n      this.currentFrame = (this.currentFrame + 1) % this.frameCount;\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    size: number\n  ): void {\n    ctx.drawImage(\n      this.image,\n      this.currentFrame * this.frameWidth,\n      0,\n      this.frameWidth,\n      this.frameHeight,\n      x,\n      y,\n      size,\n      size\n    );\n  }\n\n  reset(): void {\n    this.currentFrame = 0;\n    this.currentTime = 0;\n  }\n\n  setImage(image: HTMLImageElement): void {\n    this.image = image;\n    this.reset();\n  }\n}\n","import { InputHandler } from './inputHandler';\nimport { SpriteAnimator } from './spriteAnimator';\nimport { assets } from './assets';\n\ntype Direction = 'left' | 'right' | 'up' | 'down';\n\ninterface Animations {\n  walk: { [key in Direction]: SpriteAnimator };\n  idle: { [key in 'left' | 'right']: SpriteAnimator };\n}\n\nexport class Player {\n  public x = 0;\n  public y = 0;\n  private speed = 600;\n  private soundtrackStarted = false;\n  private direction: Direction = 'right';\n  private isMoving = false;\n  private inputEnabled = true;\n  private animations: Animations;\n  private currentAnimator: SpriteAnimator;\n\n  constructor(\n    private input: InputHandler,\n    private horseSound: HTMLAudioElement,\n    private soundtrack: HTMLAudioElement\n  ) {\n    this.animations = {\n      walk: {\n        left: new SpriteAnimator(\n          assets['walk_left.png'] ??\n            ((): never => {\n              throw new Error('Missing asset: walk_left.png');\n            })(),\n          64,\n          64,\n          4,\n          0.15\n        ),\n        right: new SpriteAnimator(\n          assets['walk_right.png'] ??\n            ((): never => {\n              throw new Error('Missing asset: walk_right.png');\n            })(),\n          64,\n          64,\n          4,\n          0.15\n        ),\n        up: new SpriteAnimator(\n          assets['walk_up.png'] ??\n            ((): never => {\n              throw new Error('Missing asset: walk_up.png');\n            })(),\n          64,\n          64,\n          4,\n          0.15\n        ),\n        down: new SpriteAnimator(\n          assets['walk_down.png'] ??\n            ((): never => {\n              throw new Error('Missing asset: walk_down.png');\n            })(),\n          64,\n          64,\n          4,\n          0.15\n        ),\n      },\n      idle: {\n        left: new SpriteAnimator(\n          assets['idle_left.png'] ??\n            ((): never => {\n              throw new Error('Missing asset: idle_left.png');\n            })(),\n          64,\n          64,\n          4,\n          0.4\n        ),\n        right: new SpriteAnimator(\n          assets['idle_right.png'] ??\n            ((): never => {\n              throw new Error('Missing asset: idle_right.png');\n            })(),\n          64,\n          64,\n          4,\n          0.4\n        ),\n      },\n    };\n\n    this.currentAnimator = this.animations.idle.right;\n  }\n\n  public setInputEnabled(v: boolean): void {\n    this.inputEnabled = v;\n  }\n\n  update(dt: number): void {\n    const moving = this.inputEnabled\n      ? {\n          up: this.input.isDown('w'),\n          down: this.input.isDown('s'),\n          left: this.input.isDown('a'),\n          right: this.input.isDown('d'),\n        }\n      : { up: false, down: false, left: false, right: false };\n\n    const wasMoving = this.isMoving;\n    this.isMoving = Object.values(moving).some(Boolean);\n\n    if (!this.soundtrackStarted && this.isMoving) {\n      this.soundtrack\n        .play()\n        .catch(err => console.warn('Blocked soundtrack:', err));\n      this.soundtrackStarted = true;\n    }\n\n    if (this.isMoving && !wasMoving) {\n      this.horseSound.currentTime = 0;\n      this.horseSound.play();\n    } else if (!this.isMoving && wasMoving) {\n      this.horseSound.pause();\n    }\n\n    if (moving.up) {\n      this.y -= this.speed * dt;\n      this.direction = 'up';\n    } else if (moving.down) {\n      this.y += this.speed * dt;\n      this.direction = 'down';\n    } else if (moving.left) {\n      this.x -= this.speed * dt;\n      this.direction = 'left';\n    } else if (moving.right) {\n      this.x += this.speed * dt;\n      this.direction = 'right';\n    }\n\n    if (this.isMoving) {\n      this.currentAnimator = this.animations.walk[this.direction];\n      this.currentAnimator.update(dt);\n    } else {\n      if (this.direction === 'left' || this.direction === 'right') {\n        this.currentAnimator = this.animations.idle[this.direction];\n        this.currentAnimator.update(dt);\n      }\n    }\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    screenX: number,\n    screenY: number\n  ): void {\n    this.currentAnimator.draw(ctx, screenX, screenY, 264);\n  }\n}\n","import { SpriteAnimator } from './spriteAnimator';\n\nexport class Duck {\n  private animator: SpriteAnimator;\n  public audio?: HTMLAudioElement;\n\n  constructor(\n    image: HTMLImageElement,\n    public worldX: number,\n    public worldY: number,\n    frameWidth: number,\n    frameHeight: number,\n    frameCount: number,\n    frameDuration: number = 0.15,\n    public readonly name: string = 'NPC',\n    audioPath?: string\n  ) {\n    this.animator = new SpriteAnimator(\n      image,\n      frameWidth,\n      frameHeight,\n      frameCount,\n      frameDuration\n    );\n\n    if (audioPath) {\n      this.audio = new Audio(audioPath);\n      this.audio.loop = true;\n      this.audio.volume = 0;\n    }\n  }\n\n  update(dt: number): void {\n    this.animator.update(dt);\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    cameraX: number,\n    cameraY: number,\n    size: number\n  ): void {\n    const screenX = this.worldX - cameraX;\n    const screenY = this.worldY - cameraY;\n    this.animator.draw(ctx, screenX, screenY, size);\n  }\n}\n","export class NPCQuoteComposer {\n  private data: Record<string, string[]> = {};\n\n  constructor(private jsonPath: string) {}\n\n  async load(): Promise<void> {\n    const response = await fetch(this.jsonPath);\n    if (!response.ok) {\n      throw new Error('Failed to load NPC quotes');\n    }\n    this.data = await response.json();\n  }\n\n  getRandomQuote(): string {\n    const authors = Object.keys(this.data);\n\n    if (authors.length === 0) {\n      return '';\n    }\n\n    const author = authors[Math.floor(Math.random() * authors.length)];\n    if (!author || !this.data[author] || this.data[author].length === 0) {\n      return '';\n    }\n    const quotes = this.data[author];\n    return quotes[Math.floor(Math.random() * quotes.length)] ?? '';\n  }\n\n  getComposedQuote(parts: number = 2): string {\n    if (Object.keys(this.data).length === 0) {\n      return '';\n    }\n\n    const segments: string[] = [];\n\n    for (let i = 0; i < parts; i++) {\n      const authors = Object.keys(this.data);\n      const author = authors[Math.floor(Math.random() * authors.length)];\n      if (!author || !this.data[author] || this.data[author].length === 0) {\n        continue;\n      }\n      const quotes = this.data[author];\n      const quote = quotes[Math.floor(Math.random() * quotes.length)] ?? '';\n      segments.push(this.trimToSegment(quote));\n    }\n    return segments.join(' ');\n  }\n\n  private trimToSegment(quote: string): string {\n    const words = quote.split(' ');\n    const start = Math.floor(Math.random() * Math.max(1, words.length - 4));\n    const end = Math.min(\n      words.length,\n      start + Math.floor(4 + Math.random() * 5)\n    );\n    return words.slice(start, end).join(' ');\n  }\n}\n","import { NpcBrain } from './types/npcBrain';\nimport { NPCQuoteComposer } from './npcQuoteComposer';\n\nenum DancerState {\n  intro = 'intro',\n  hintNorth = 'hintNorth',\n  hintRoot = 'hintRoot',\n  request = 'request',\n  accepted = 'accepted',\n  complete = 'complete',\n}\n\nexport class DancerBrain implements NpcBrain {\n  id = 'dancer';\n  private state: DancerState = DancerState.intro;\n\n  start(): void {\n    if (this.state === DancerState.intro) return;\n  }\n\n  respond(input: string, composer: NPCQuoteComposer): string {\n    const text = input.toLowerCase();\n\n    switch (this.state) {\n      case DancerState.intro: {\n        const flavor = composer.getComposedQuote(2);\n        this.state = DancerState.hintNorth;\n        return `This world is a real mess. ${flavor}`;\n      }\n\n      case DancerState.hintNorth: {\n        if (includesAny(text, ['north', 'up'])) {\n          this.state = DancerState.hintRoot;\n          const flavor = composer.getRandomQuote();\n          return `You may as well look north. ${flavor}`;\n        }\n\n        const flavor = composer.getComposedQuote(2);\n        return `Directions matter. ${flavor}`;\n      }\n\n      case DancerState.hintRoot: {\n        if (\n          includesAny(text, [\n            'tree',\n            'root',\n            'trees',\n            'roots',\n            'plants',\n            'plant',\n          ])\n        ) {\n          this.state = DancerState.request;\n          const flavor = composer.getComposedQuote(2);\n          return `It will look like someone walked. A root. ${flavor}`;\n        }\n        const flavor = composer.getRandomQuote();\n        return `Look for signs in the ground. ${flavor}`;\n      }\n\n      case DancerState.request: {\n        if (\n          includesAny(text, ['ok', 'okay', 'yes', 'sure', 'i will', 'accept'])\n        ) {\n          this.state = DancerState.accepted;\n\n          const flavor = composer.getComposedQuote(2);\n\n          return `It's beautiful. ${flavor}`;\n        }\n        const flavor = composer.getRandomQuote();\n        return `You've certainly changed. I haven't. go north, take the root. ${flavor}`;\n      }\n\n      case DancerState.accepted: {\n        this.state = DancerState.complete;\n        const flavor = composer.getComposedQuote(2);\n        return `Just one way, in and back out. ${flavor}`;\n      }\n\n      case DancerState.complete: {\n        return `Let´s see what it remembers.`;\n      }\n    }\n  }\n}\n\nconst includesAny = (haystack: string, needles: string[]): boolean => {\n  return needles.some(needle => haystack.includes(needle));\n};\n","import { NPCQuoteComposer } from './npcQuoteComposer';\nimport { NpcBrain } from './types/npcBrain';\nimport { DancerBrain } from './dancerBrain';\n\nexport class NPCDialogueManager {\n  private composer: NPCQuoteComposer;\n  private activeNPC: string | null = null;\n  private conversationHistory: string[] = [];\n  private brains = new Map<string, NpcBrain>();\n\n  constructor(jsonPath: string) {\n    this.composer = new NPCQuoteComposer(jsonPath);\n    this.brains.set('dancer', new DancerBrain());\n  }\n\n  async load(): Promise<void> {\n    await this.composer.load();\n  }\n\n  startConversation(npcName: string): void {\n    this.activeNPC = npcName;\n    this.conversationHistory = [];\n    this.brains.get(npcName)?.start();\n  }\n\n  endConversation(): void {\n    this.activeNPC = null;\n    this.conversationHistory = [];\n  }\n\n  getNPCResponse(playerInput: string): string {\n    if (!this.activeNPC) {\n      throw new Error('No NPC conversation started.');\n    }\n\n    let response: string;\n\n    const brain = this.brains.get(this.activeNPC);\n    if (brain) {\n      response = brain.respond(playerInput, this.composer);\n    } else {\n      const chance = Math.random();\n      response =\n        chance > 0.5\n          ? this.composer.getComposedQuote(2 + Math.floor(Math.random() * 2))\n          : this.composer.getRandomQuote();\n    }\n\n    this.conversationHistory.push(`Player: ${playerInput}`);\n    this.conversationHistory.push(`${this.activeNPC}: ${response}`);\n\n    return response;\n  }\n\n  getHistory(): string[] {\n    return [...this.conversationHistory];\n  }\n}\n","import { InputHandler } from './inputHandler';\n\ntype Page = { text: string; lines: string[] };\n\nexport class DialogueUI {\n  private active = false;\n  private npcName = '';\n  private rawText = '';\n  private pages: Page[] = [];\n  private pageIndex = 0;\n\n  private revealChars = 0;\n  private charsPerSecond = 55;\n  private lineHeight = 28;\n  private padding = 22;\n  private boxHeight = 156;\n  private textTopGap = 10;\n\n  private font = \"16px 'Public Pixel', sans-serif\";\n  private nameFont = \"bold 16px 'Public Pixel', sans-serif\";\n  private inputFont = \"bold 16px 'Public Pixel', sans-serif\";\n\n  private typingMode = false;\n  private typedText = '';\n  private submitted: string | null = null;\n\n  constructor(private input: InputHandler) {}\n\n  open(npcName: string, text: string): void {\n    this.active = true;\n    this.npcName = npcName;\n    this.rawText = text;\n    this.pages = [];\n    this.pageIndex = 0;\n    this.revealChars = 0;\n  }\n\n  close(): void {\n    this.active = false;\n  }\n\n  isActive(): boolean {\n    return this.active;\n  }\n\n  isTyping(): boolean {\n    return this.typingMode;\n  }\n\n  pollSubmittedText(): string | null {\n    const t = this.submitted;\n    this.submitted = null;\n    return t;\n  }\n\n  update(dt: number): void {\n    if (!this.active) return;\n\n    if (this.typingMode) return;\n\n    this.revealChars += this.charsPerSecond * dt;\n\n    const pressed =\n      this.input.isDown(' ') ||\n      this.input.isDown('Enter') ||\n      this.input.isDown('z');\n\n    if (pressed) {\n      const fullLen = this.currentPageFullText().length;\n\n      if (this.revealChars < fullLen) {\n        this.revealChars = fullLen;\n      } else {\n        if (this.pageIndex < this.pages.length - 1) {\n          this.pageIndex++;\n          this.revealChars = 0;\n        } else {\n          this.close();\n        }\n      }\n    }\n  }\n\n  enableTyping(): void {\n    this.typingMode = true;\n    this.typedText = '';\n    window.addEventListener('keydown', this.handleTyping);\n  }\n\n  disableTyping(): void {\n    this.typingMode = false;\n    window.removeEventListener('keydown', this.handleTyping);\n  }\n\n  private handleTyping = (e: KeyboardEvent): void => {\n    if (!this.typingMode) return;\n\n    if (e.key === 'Backspace' || e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'Backspace') {\n      this.typedText = this.typedText.slice(0, -1);\n      return;\n    }\n\n    if (e.key === 'Enter') {\n      this.submitted = this.typedText.trim();\n      this.disableTyping();\n      return;\n    }\n\n    if (e.key === ' ') {\n      this.typedText += ' ';\n      return;\n    }\n\n    if (e.key.length === 1) {\n      this.typedText += e.key;\n    }\n  };\n\n  getTypedText(): string {\n    return this.typedText;\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    screenW: number,\n    screenH: number\n  ): void {\n    if (!this.active) {\n      if (this.typingMode) {\n        ctx.save();\n        ctx.globalAlpha = 1;\n        ctx.fillStyle = '#222';\n        ctx.fillRect(50, screenH - 80, screenW - 100, 40);\n        ctx.strokeStyle = '#fff';\n        ctx.strokeRect(50, screenH - 80, screenW - 100, 40);\n        ctx.fillStyle = '#fff';\n        ctx.font = this.inputFont;\n        ctx.textBaseline = 'middle';\n        ctx.fillText(this.typedText + '_', 60, screenH - 60);\n        ctx.restore();\n      }\n      return;\n    }\n\n    if (this.pages.length === 0) {\n      this.computePages(ctx, screenW);\n    }\n    const x = this.padding;\n    const w = screenW - this.padding * 2;\n    const h = this.boxHeight;\n    const y = screenH - h - this.padding;\n\n    ctx.save();\n\n    ctx.globalAlpha = 0.9;\n    ctx.fillStyle = '#111';\n    this.roundRect(ctx, x, y, w, h, 10);\n    ctx.fill();\n\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = '#ffffff55';\n    ctx.lineWidth = 2;\n    this.roundRect(ctx, x, y, w, h, 10);\n    ctx.stroke();\n\n    ctx.font = this.nameFont;\n    ctx.fillStyle = '#fff';\n    const namePadX = 14;\n    const namePadY = 8;\n    ctx.fillText(this.npcName, x + namePadX, y + namePadY + 14);\n\n    const innerX = x + this.padding;\n    const innerY = y + this.padding + 24 + this.textTopGap;\n    ctx.font = this.font;\n    ctx.fillStyle = '#eee';\n    const page = this.pages[this.pageIndex];\n    if (page) {\n      const visible = page.text.slice(0, Math.floor(this.revealChars));\n      let cursor = 0;\n      let drawY = innerY;\n      for (const line of page.lines) {\n        const take = Math.max(\n          0,\n          Math.min(line.length, visible.length - cursor)\n        );\n        const part = line.slice(0, take);\n        ctx.fillText(part, innerX, drawY);\n        cursor += line.length + 1;\n        drawY += this.lineHeight;\n      }\n\n      const fullLen = page.text.length;\n      if (this.revealChars >= fullLen) {\n        const hasMore = this.pageIndex < this.pages.length - 1;\n        const indicator = hasMore ? '▶' : '■';\n        ctx.globalAlpha = 0.85;\n        ctx.fillText(indicator, x + w - 24, y + h - 12);\n        ctx.globalAlpha = 1;\n      }\n    }\n    ctx.restore();\n\n    if (this.typingMode) {\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.fillStyle = '#222';\n      ctx.fillRect(50, screenH - 80, screenW - 100, 40);\n      ctx.strokeStyle = '#fff';\n      ctx.strokeRect(50, screenH - 80, screenW - 100, 40);\n\n      ctx.fillStyle = '#fff';\n      ctx.font = this.inputFont;\n      ctx.textBaseline = 'middle';\n      ctx.fillText(this.typedText + '_', 60, screenH - 60);\n      ctx.restore();\n    }\n  }\n\n  private currentPageFullText(): string {\n    if (!this.pages.length || !this.pages[this.pageIndex]) return '';\n    const page = this.pages[this.pageIndex];\n    return page ? page.text : '';\n  }\n\n  private computePages(ctx: CanvasRenderingContext2D, screenW: number): void {\n    ctx.save();\n    ctx.font = this.font;\n\n    const w = screenW - this.padding * 2;\n    const innerW = w - this.padding * 2;\n    const innerH = this.boxHeight - this.padding * 2 - 24;\n    const linesPerPage = Math.max(1, Math.floor(innerH / this.lineHeight));\n\n    const words = this.rawText.split(/\\s+/);\n    const lines: string[] = [];\n    let current = '';\n\n    for (const word of words) {\n      const test = current ? current + ' ' + word : word;\n      if (ctx.measureText(test).width <= innerW) {\n        current = test;\n      } else {\n        if (current) lines.push(current);\n        current = word;\n      }\n    }\n    if (current) lines.push(current);\n\n    const pages: Page[] = [];\n    for (let i = 0; i < lines.length; i += linesPerPage) {\n      const chunk = lines.slice(i, i + linesPerPage);\n      pages.push({\n        lines: chunk,\n        text: chunk.join('\\n'),\n      });\n    }\n\n    this.pages = pages.length ? pages : [{ lines: [''], text: '' }];\n    ctx.restore();\n  }\n\n  private roundRect(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    r: number\n  ): void {\n    ctx.beginPath();\n    ctx.moveTo(x + r, y);\n    ctx.arcTo(x + w, y, x + w, y + h, r);\n    ctx.arcTo(x + w, y + h, x, y + h, r);\n    ctx.arcTo(x, y + h, x, y, r);\n    ctx.arcTo(x, y, x + w, y, r);\n    ctx.closePath();\n  }\n}\n","import { SpriteAnimator } from './spriteAnimator';\nimport { assets } from './assets';\n\nexport class TileAnimator {\n  private animator: SpriteAnimator;\n\n  constructor(\n    public tileName: string,\n    frameWidth: number,\n    frameHeight: number,\n    frameCount: number,\n    frameDuration: number = 0.3\n  ) {\n    const img = assets[tileName];\n    if (!img) throw new Error(`Missing animated tile: ${tileName}`);\n    this.animator = new SpriteAnimator(\n      img,\n      frameWidth,\n      frameHeight,\n      frameCount,\n      frameDuration\n    );\n  }\n\n  update(deltaTime: number): void {\n    this.animator.update(deltaTime);\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    size: number\n  ): void {\n    this.animator.draw(ctx, x, y, size);\n  }\n}\n","export type TileType = 'grass' | 'wall' | null;\n\nexport interface WorldMap {\n  legend: Record<string, string>;\n  rows: string[];\n  width: number;\n  height: number;\n}\n\nexport const loadWorldMap = async (path: string): Promise<WorldMap> => {\n  const response = await fetch(path);\n  if (!response.ok) {\n    throw new Error(\n      `Failed to load world map from ${path}: ${response.statusText}`\n    );\n  }\n  const json = await response.json();\n\n  const rows: string[] = json.rows ?? [];\n\n  if (!rows.length) {\n    throw new Error(`World map at ${path} has no rows`);\n  }\n  const width = rows[0]?.length ?? 0;\n  if (width === 0) {\n    throw new Error(`World map at ${path} has empty first row`);\n  }\n  if (!rows.every(row => row.length === width)) {\n    throw new Error(`World map at ${path} has rows of varying lengths`);\n  }\n\n  return {\n    legend: json.legend ?? {},\n    rows,\n    width,\n    height: rows.length,\n  };\n};\n\nexport const getWorldMapChar = (\n  world: WorldMap,\n  tx: number,\n  ty: number\n): string | null => {\n  if (ty < 0 || ty >= world.height || tx < 0 || tx >= world.width) return null;\n  const row = world.rows[ty];\n  if (typeof row === 'undefined' || typeof row[tx] === 'undefined') {\n    return null;\n  }\n  return row[tx];\n};\n","import { SpriteAnimator } from './spriteAnimator';\nimport { assets } from './assets';\n\nexport class Pickup {\n  private animator: SpriteAnimator;\n  public collected = false;\n\n  constructor(\n    public id: string,\n    public tileX: number,\n    public tileY: number,\n    spriteSheet: string,\n    frameCount: number,\n    frameW = 64,\n    frameH = 64,\n    frameTime = 0.08\n  ) {\n    const img = assets[spriteSheet];\n    if (!img) throw new Error(`Pickup sprite missing: ${spriteSheet}`);\n    this.animator = new SpriteAnimator(\n      img,\n      frameW,\n      frameH,\n      frameCount,\n      frameTime\n    );\n  }\n\n  update(dt: number): void {\n    if (!this.collected) this.animator.update(dt);\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    cameraX: number,\n    cameraY: number,\n    tileSize: number\n  ): void {\n    if (this.collected) return;\n    const screenX = this.tileX * tileSize - cameraX;\n    const screenY = this.tileY * tileSize - cameraY;\n    this.animator.draw(ctx, screenX, screenY, tileSize);\n  }\n\n  isAt(tx: number, ty: number): boolean {\n    return !this.collected && this.tileX === tx && this.tileY === ty;\n  }\n\n  collect(): void {\n    this.collected = true;\n  }\n}\n","export const collageSources: HTMLImageElement[] = [];\n\nexport const loadRandomImages = (urls: string[]): Promise<void> => {\n  return Promise.all(\n    urls.map(url => {\n      return new Promise<void>((resolve, reject) => {\n        const image = new Image();\n\n        image.crossOrigin = 'anonymous';\n        image.onload = (): void => {\n          collageSources.push(image);\n          resolve();\n        };\n        image.onerror = (): void =>\n          reject(new Error(`Failed to load image: ${url}`));\n        image.src = url;\n      });\n    })\n  ).then(() => undefined);\n};\n\nexport const makeCollageTexture = (size = 164): HTMLCanvasElement => {\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d')!;\n\n  for (let i = 0; i < 6; i++) {\n    const img =\n      collageSources[Math.floor(Math.random() * collageSources.length)];\n    if (!img) continue;\n\n    const sw = size / 2;\n    const sh = size / 2;\n    const sx = Math.floor(Math.random() * (img.width - sw));\n    const sy = Math.floor(Math.random() * (img.height - sh));\n\n    const dx = (i % 2) * (size / 2);\n    const dy = Math.floor(i / 2) * (size / 2);\n\n    ctx.drawImage(img, sx, sy, sw, sh, dx, dy, sw, sh);\n  }\n\n  return canvas;\n};\n","import { InputHandler } from './inputHandler';\nimport { Renderer } from './renderer';\nimport { assets } from './assets';\nimport { Player } from './player';\nimport { Duck } from './duck';\nimport { NPCDialogueManager } from './npcDialogueManager';\nimport { DialogueUI } from './dialogueUI';\nimport { FaceFilterOverlay } from './faceFilterOverlay';\nimport { TileAnimator } from './tileAnimator';\nimport { WorldMap, getWorldMapChar } from './worldMap';\nimport { Pickup } from './pickup';\nimport { makeCollageTexture } from './collage';\n\nconst TILE_SIZE = 164;\n\nexport class Scene {\n  private mapSeed = 1337;\n  private wallMask = new Map<string, boolean>();\n  private collageTex: HTMLCanvasElement = makeCollageTexture(TILE_SIZE);\n  private collageTimer = 0;\n  private pickups: Pickup[] = [];\n  private inventory = new Set<string>();\n  private player: Player;\n  private ducks: Duck[] = [];\n  private frozenPos: { x: number; y: number } | null = null;\n  private face?: FaceFilterOverlay;\n  private prevDialogueActive = false;\n\n  private playerX = 0;\n  private playerY = 0;\n\n  private grassTiles: string[] = ['1.png', '2.png', '3.png', '4.png'];\n\n  private tileCache = new Map<\n    string,\n    { tile: string | TileAnimator; time: number }\n  >();\n\n  private tileLifetime = 3000;\n\n  private lastTileX = 0;\n  private lastTileY = 0;\n\n  private dialogueUI: DialogueUI;\n  private dialogueManager: NPCDialogueManager;\n  private currentNpcName: string | null = null;\n  private animatedTiles = new Map<string, TileAnimator>();\n\n  constructor(\n    private input: InputHandler,\n    private horseSound: HTMLAudioElement,\n    private soundtrack: HTMLAudioElement,\n    private world: WorldMap\n  ) {\n    this.player = new Player(this.input, this.horseSound, this.soundtrack);\n    const lilDuck = assets['duck.png'];\n    if (!lilDuck) {\n      throw new Error(\"Duck asset 'duck.png' not found in assets.\");\n    }\n    this.ducks.push(\n      new Duck(\n        lilDuck,\n        1000,\n        1000,\n        64,\n        64,\n        4,\n        0.25,\n        'animal',\n        'assets/duck.mp3'\n      )\n    );\n\n    const dancer = assets['dancer.png'];\n    if (!dancer) {\n      throw new Error(\"Dancer asset 'dancer.png' not found in assets.\");\n    }\n    this.ducks.push(\n      new Duck(\n        dancer,\n        500,\n        500,\n        64,\n        64,\n        14,\n        0.25,\n        'dancer',\n        'assets/dancer.mp3'\n      )\n    );\n\n    this.dialogueUI = new DialogueUI(this.input);\n    this.dialogueManager = new NPCDialogueManager('assets/npcQuotes.json');\n    this.dialogueManager.load().catch(err => {\n      throw new Error(`Failed to load NPC dialogues: ${err}`);\n    });\n\n    this.pickups.push(new Pickup('root', 2, 2, 'root.png', 26, 64, 64, 0.08));\n  }\n\n  private hashTile(tx: number, ty: number): number {\n    const x = tx | 0,\n      y = ty | 0;\n    let h = (x * 374761393 + y * 668265263 + this.mapSeed * 1442695040) >>> 0;\n\n    h ^= h << 13;\n    h >>>= 0;\n    h ^= h >> 17;\n    h >>>= 0;\n    h ^= h << 5;\n    h >>>= 0;\n    return (h >>> 0) / 0xffffffff;\n  }\n\n  private isWallAt(tx: number, ty: number): boolean {\n    const k = `${tx},${ty}`;\n    const cached = this.wallMask.get(k);\n    if (cached !== undefined) return cached;\n\n    const ch = getWorldMapChar(this.world, tx, ty);\n    if (ch === 'W' || ch === 'C') {\n      this.wallMask.set(k, false);\n      return false;\n    }\n\n    const r = this.hashTile(tx, ty);\n    const isWall = r < 0.12;\n    this.wallMask.set(k, isWall);\n    return isWall;\n  }\n\n  private updatePickups(dt: number): void {\n    for (const p of this.pickups) p.update(dt);\n  }\n\n  private tryCollectPickup(): void {\n    if (!this.input.isDown('f')) return;\n\n    const px = this.playerX;\n    const py = this.playerY;\n    const range = TILE_SIZE * 10;\n\n    for (const p of this.pickups) {\n      const cx = p.tileX * TILE_SIZE + TILE_SIZE / 2;\n      const cy = p.tileY * TILE_SIZE + TILE_SIZE / 2;\n      const dx = cx - px;\n      const dy = cy - py;\n      if (Math.sqrt(dx * dx + dy * dy) < range) {\n        p.collect();\n        this.inventory.add(p.id);\n\n        break;\n      }\n    }\n  }\n\n  private collidesWithPickup(tx: number, ty: number): boolean {\n    return this.pickups.some(p => p.isAt(tx, ty));\n  }\n\n  private isWalkableTile(tx: number, ty: number): boolean {\n    const ch = getWorldMapChar(this.world, tx, ty);\n    if (ch === 'W' || ch === 'C') return true;\n\n    return !this.isWallAt(tx, ty);\n  }\n\n  private collidesWithNPC(tx: number, ty: number): boolean {\n    return this.ducks.some(npc => {\n      const nx = Math.floor(npc.worldX / TILE_SIZE);\n      const ny = Math.floor(npc.worldY / TILE_SIZE);\n      return nx === tx && ny === ty;\n    });\n  }\n\n  setFaceOverlay(overlay: FaceFilterOverlay): void {\n    this.face = overlay;\n  }\n\n  private getTile(tileX: number, tileY: number): string | TileAnimator {\n    const key = `${tileX},${tileY}`;\n    const now = performance.now();\n\n    const cached = this.tileCache.get(key);\n    if (cached && now - cached.time < this.tileLifetime) return cached.tile;\n\n    let result: string | TileAnimator;\n\n    const ch = getWorldMapChar(this.world, tileX, tileY);\n    if (ch === 'W') {\n      if (!this.animatedTiles.has(key)) {\n        this.animatedTiles.set(\n          key,\n          new TileAnimator('water.jpg', 64, 64, 10, 0.15)\n        );\n      }\n      result = this.animatedTiles.get(key)!;\n    } else if (ch === 'G' || ch === null) {\n      if (this.isWallAt(tileX, tileY)) {\n        result = '4.png';\n      } else {\n        const grassOptions = ['1.png', '2.png', '3.png'];\n        const base =\n          grassOptions[Math.floor(Math.random() * grassOptions.length)] ??\n          '1.png';\n        result = base;\n      }\n    } else {\n      result =\n        ['1.png', '2.png', '3.png'][Math.floor(Math.random() * 3)] ?? '1.png';\n    }\n\n    this.tileCache.set(key, { tile: result, time: now });\n    return result;\n  }\n\n  SPEED = 200;\n\n  update(dt: number): void {\n    this.collageTimer += dt;\n    if (this.collageTimer > 2) {\n      this.collageTex = makeCollageTexture(TILE_SIZE);\n      this.collageTimer = 0;\n    }\n    for (const anim of this.animatedTiles.values()) {\n      anim.update(dt);\n    }\n    this.updatePickups(dt);\n    const inDialogue = this.dialogueUI.isActive();\n\n    if (inDialogue && this.frozenPos) {\n      this.playerX = this.frozenPos.x;\n      this.playerY = this.frozenPos.y;\n    }\n\n    this.player.setInputEnabled(!inDialogue);\n\n    if (!inDialogue) {\n      const step = this.SPEED * dt;\n\n      let dx = 0,\n        dy = 0;\n      if (this.input.isDown('a')) dx -= step;\n      if (this.input.isDown('d')) dx += step;\n      if (this.input.isDown('w')) dy -= step;\n      if (this.input.isDown('s')) dy += step;\n\n      if (dx !== 0) {\n        const nextX = this.playerX + dx;\n        const { cx, cy } = this.getPlayerCenterTile(nextX, this.playerY);\n        if (\n          this.isWalkableTile(cx, cy) &&\n          !this.collidesWithNPC(cx, cy) &&\n          !this.collidesWithPickup(cx, cy)\n        ) {\n          this.playerX = nextX;\n        }\n      }\n\n      if (dy !== 0) {\n        const nextY = this.playerY + dy;\n        const { cx, cy } = this.getPlayerCenterTile(this.playerX, nextY);\n        if (\n          this.isWalkableTile(cx, cy) &&\n          !this.collidesWithNPC(cx, cy) &&\n          !this.collidesWithPickup(cx, cy)\n        ) {\n          this.playerY = nextY;\n        }\n      }\n\n      this.checkNPCInteraction();\n    } else {\n      this.dialogueUI.update(dt);\n      const submitted = this.dialogueUI.pollSubmittedText();\n      if (submitted) {\n        const response = this.dialogueManager.getNPCResponse(submitted);\n        const label = this.currentNpcName ?? 'NPC';\n        this.dialogueUI.open(label, response);\n      }\n    }\n\n    this.tryCollectPickup();\n\n    const currentTileX = Math.floor(this.playerX / TILE_SIZE);\n    const currentTileY = Math.floor(this.playerY / TILE_SIZE);\n\n    if (currentTileX !== this.lastTileX || currentTileY !== this.lastTileY) {\n      this.onTileChanged(currentTileX, currentTileY);\n      this.lastTileX = currentTileX;\n      this.lastTileY = currentTileY;\n    }\n    this.player.update(dt);\n\n    this.ducks.forEach(sprite => sprite.update(dt));\n\n    for (const npc of this.ducks) {\n      if (!npc.audio) continue;\n\n      const dx = npc.worldX - this.playerX;\n      const dy = npc.worldY - this.playerY;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n\n      const maxDist = 300;\n      let targetVolume = 0;\n\n      if (dist < maxDist) {\n        targetVolume = 1 - dist / maxDist;\n      }\n\n      if (targetVolume > 0 && npc.audio.paused) {\n        npc.audio.play().catch(err => console.warn('Audio blocked:', err));\n      } else if (targetVolume <= 0 && !npc.audio.paused) {\n        npc.audio.pause();\n      }\n\n      npc.audio.volume += (targetVolume - npc.audio.volume) * 0.1;\n    }\n    const isActive = this.dialogueUI.isActive();\n    if (!this.prevDialogueActive && isActive) {\n      this.face?.show();\n    } else if (this.prevDialogueActive && !isActive) {\n      this.face?.hide();\n      this.dialogueUI.disableTyping();\n      this.frozenPos = null;\n      this.input.clear?.();\n    }\n    this.prevDialogueActive = isActive;\n  }\n\n  private checkNPCInteraction(): void {\n    if (!this.input.isDown('e')) return;\n\n    const radius = 100;\n    let best: Duck | null = null;\n    let bestDistSq = Infinity;\n\n    for (const npc of this.ducks) {\n      const dx = npc.worldX - this.playerX;\n      const dy = npc.worldY - this.playerY;\n      const d2 = dx * dx + dy * dy;\n      if (d2 < radius * radius && d2 < bestDistSq) {\n        best = npc;\n        bestDistSq = d2;\n      }\n    }\n\n    if (best) {\n      this.startTalk(best.name);\n    }\n  }\n\n  private onTileChanged(tileX: number, tileY: number): void {\n    for (let y = -1; y <= 1; y++) {\n      for (let x = -1; x <= 1; x++) {\n        const key = `${tileX + x},${tileY + y}`;\n        this.tileCache.delete(key);\n      }\n    }\n  }\n\n  render(renderer: Renderer): void {\n    const screenWidth = window.innerWidth;\n    const screenHeight = window.innerHeight;\n\n    const cameraX = this.playerX - screenWidth / 2;\n    const cameraY = this.playerY - screenHeight / 2;\n\n    const startTileX = Math.floor(cameraX / TILE_SIZE) - 1;\n    const startTileY = Math.floor(cameraY / TILE_SIZE) - 1;\n    const endTileX = Math.ceil((cameraX + screenWidth) / TILE_SIZE) + 1;\n    const endTileY = Math.ceil((cameraY + screenHeight) / TILE_SIZE) + 1;\n\n    for (let tileY = startTileY; tileY < endTileY; tileY++) {\n      for (let tileX = startTileX; tileX < endTileX; tileX++) {\n        const screenX = tileX * TILE_SIZE - cameraX;\n        const screenY = tileY * TILE_SIZE - cameraY;\n\n        if (getWorldMapChar(this.world, tileX, tileY) === 'C') {\n          renderer.ctx.drawImage(\n            this.collageTex,\n            screenX,\n            screenY,\n            TILE_SIZE,\n            TILE_SIZE\n          );\n          continue;\n        }\n\n        const t = this.getTile(tileX, tileY);\n        if (!t) continue;\n        if (typeof t === 'string') {\n          const img = assets[t];\n          if (img) renderer.drawImage(img, screenX, screenY, TILE_SIZE);\n        } else {\n          t.render(renderer.ctx, screenX, screenY, TILE_SIZE);\n        }\n      }\n    }\n    for (const p of this.pickups) {\n      p.render(renderer.ctx, cameraX, cameraY, TILE_SIZE);\n    }\n    const px = screenWidth / 2 - 32;\n    const py = screenHeight / 2 - 32;\n\n    this.player.render(renderer.ctx, px, py);\n    this.ducks.forEach(duck => {\n      duck.render(renderer.ctx, cameraX, cameraY, TILE_SIZE);\n    });\n    this.dialogueUI.render(renderer.ctx, screenWidth, screenHeight);\n  }\n  private getPlayerCenterTile(\n    px = this.playerX,\n    py = this.playerY\n  ): { cx: number; cy: number } {\n    const cx = Math.floor((px + TILE_SIZE / 2) / TILE_SIZE);\n    const cy = Math.floor((py + TILE_SIZE / 2) / TILE_SIZE);\n    return { cx, cy };\n  }\n\n  private startTalk(npcName: string): void {\n    this.currentNpcName = npcName;\n    this.frozenPos = { x: this.playerX, y: this.playerY };\n    this.dialogueManager.startConversation(npcName);\n    this.dialogueUI.open('You', '');\n    this.dialogueUI.enableTyping();\n    this.input.clear?.();\n  }\n}\n","import { Renderer } from './renderer';\nimport { InputHandler } from './inputHandler';\nimport { Scene } from './scene';\nimport { FaceFilterOverlay } from './faceFilterOverlay';\nimport { WorldMap } from './worldMap';\n\nexport class Game {\n  private ctx: CanvasRenderingContext2D;\n  private renderer: Renderer;\n  private input: InputHandler;\n  private scene: Scene;\n  private lastTime = 0;\n\n  constructor(\n    private canvas: HTMLCanvasElement,\n    private horseSound: HTMLAudioElement,\n    private soundtrack: HTMLAudioElement,\n    private world: WorldMap\n  ) {\n    this.ctx = canvas.getContext('2d')!;\n    this.renderer = new Renderer(this.ctx);\n    this.input = new InputHandler();\n    this.scene = new Scene(\n      this.input,\n      this.horseSound,\n      this.soundtrack,\n      this.world\n    );\n\n    window.addEventListener('resize', () => this.resize());\n    this.resize();\n  }\n\n  public setFaceOverlay(overlay: FaceFilterOverlay): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this as any).scene?.setFaceOverlay?.(overlay);\n  }\n\n  private resize(): void {\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n  }\n\n  public start(): void {\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  private loop(time: number): void {\n    const dt = (time - this.lastTime) / 1000;\n    this.lastTime = time;\n\n    this.scene.update(dt);\n    this.renderer.clear();\n    this.scene.render(this.renderer);\n\n    requestAnimationFrame(this.loop.bind(this));\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { SpriteAnimator } from './spriteAnimator';\n\ntype MPFaceLandmarker = any;\n\nexport class FaceFilterOverlay {\n  private maskAnimator: SpriteAnimator | null = null;\n  private readonly eyeLeftOuter = 33;\n  private readonly eyeRightOuter = 263;\n  private smoothed = { cx: 0, cy: 0, scale: 0, angle: 0, ready: false };\n  private smoothFactor = 0.25;\n  private holdFramesLeft = 0;\n  private maskScale = 2.8;\n  private maskYOffset = -0.15;\n  private maskXOffsetPx = 0;\n  private readonly maxHoldFrames = 6;\n  private video: HTMLVideoElement;\n  private canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n  private overlayElement: HTMLElement;\n  private running = false;\n\n  private rafId: number | null = null;\n  private lastVideoTime = -1;\n  private frameSkip = 0;\n  private detectEveryNFrames = 1;\n  private landmarker: MPFaceLandmarker | null = null;\n\n  private maskImage = new Image();\n  private maskLoaded = false;\n  private initialized = false;\n\n  constructor(\n    private modelUrl: string = 'https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/latest/face_landmarker.task'\n  ) {\n    const overlay = document.querySelector(\n      '.face-overlay'\n    ) as HTMLElement | null;\n    const canvas = document.getElementById(\n      'faceCanvas'\n    ) as HTMLCanvasElement | null;\n    if (!overlay || !canvas) {\n      throw new Error(\n        'Overlay or canvas element not found (need .face-overlay and #faceCanvas)'\n      );\n    }\n    this.overlayElement = overlay;\n    this.canvas = canvas;\n\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) throw new Error('Failed to get canvas 2D context');\n    this.context = ctx;\n\n    this.video = document.createElement('video');\n    this.video.playsInline = true;\n    this.video.muted = true;\n    this.video.autoplay = true;\n\n    const maskSheet = new Image();\n    maskSheet.src = 'assets/clown.png';\n    maskSheet.onload = (): void => {\n      this.maskAnimator = new SpriteAnimator(maskSheet, 128, 128, 6, 0.3);\n    };\n  }\n\n  async init(): Promise<void> {\n    if (this.initialized) return;\n\n    let FaceLandmarker: any, FilesetResolver: any;\n    try {\n      ({ FaceLandmarker, FilesetResolver } = await import(\n        '@mediapipe/tasks-vision'\n      ));\n    } catch {\n      throw new Error(\n        'Failed to load @mediapipe/tasks-vision. Is it installed?'\n      );\n    }\n\n    const vision = await FilesetResolver.forVisionTasks(\n      'https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.4/wasm'\n    );\n\n    this.landmarker = await FaceLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath: this.modelUrl,\n      },\n      runningMode: 'VIDEO',\n      numFaces: 1,\n    });\n\n    let stream: MediaStream;\n\n    this.canvas.width = 160;\n    this.canvas.height = 120;\n    try {\n      stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 128 },\n          height: { ideal: 96 },\n          facingMode: 'user',\n        },\n        audio: false,\n      });\n    } catch (err: any) {\n      if (err?.name === 'NotAllowedError') {\n        throw new Error('Camera permission was denied.');\n      }\n      throw new Error('Unable to access camera.');\n    }\n\n    this.video.srcObject = stream;\n\n    await new Promise<void>(resolve => {\n      const onMeta = (): void => {\n        this.video.removeEventListener('loadedmetadata', onMeta);\n        resolve();\n      };\n      if (this.video.readyState >= 1) resolve();\n      else this.video.addEventListener('loadedmetadata', onMeta);\n    });\n\n    try {\n      await this.video.play();\n    } catch {\n      throw new Error(\n        'Failed to start video playback (user gesture may be required).'\n      );\n    }\n\n    this.initialized = true;\n  }\n\n  async show(): Promise<void> {\n    await this.init();\n    this.overlayElement.style.display = 'block';\n    if (!this.running) {\n      this.running = true;\n      this.lastVideoTime = -1;\n      this.loop();\n    }\n  }\n\n  hide(): void {\n    this.overlayElement.style.display = 'none';\n    this.running = false;\n    if (this.rafId != null) {\n      cancelAnimationFrame(this.rafId);\n      this.rafId = null;\n    }\n  }\n\n  async destroy(): Promise<void> {\n    this.hide();\n    const stream = this.video.srcObject as MediaStream | null;\n    stream?.getTracks().forEach(t => t.stop());\n    this.video.srcObject = null;\n    this.landmarker?.close?.();\n    this.landmarker = null;\n    this.initialized = false;\n  }\n\n  private loop = (): void => {\n    if (!this.running) return;\n\n    this.context.save();\n    this.context.translate(this.canvas.width, 0);\n    this.context.scale(-1, 1);\n\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.context.drawImage(\n      this.video,\n      0,\n      0,\n      this.canvas.width,\n      this.canvas.height\n    );\n\n    const vt = this.video.currentTime;\n\n    if (this.landmarker && vt !== this.lastVideoTime) {\n      this.frameSkip = (this.frameSkip + 1) % this.detectEveryNFrames;\n      if (this.frameSkip === 0) {\n        const res = this.landmarker.detectForVideo(\n          this.video,\n          performance.now()\n        );\n        const face = res?.faceLandmarks?.[0];\n\n        if (face) {\n          this.updatePoseFromLandmarks(face);\n          this.holdFramesLeft = this.maxHoldFrames;\n        } else if (this.holdFramesLeft > 0) {\n          this.holdFramesLeft--;\n        }\n      }\n\n      this.lastVideoTime = vt;\n    }\n\n    if (this.smoothed.ready && this.holdFramesLeft > 0) {\n      this.drawSmoothedMask();\n    }\n\n    if (this.maskAnimator) {\n      this.maskAnimator.update(1 / 60);\n      this.drawMaskFromAnimator();\n    }\n    this.context.restore();\n    this.rafId = requestAnimationFrame(this.loop);\n  };\n\n  private drawMaskFromAnimator(): void {\n    if (!this.maskAnimator) return;\n    const { cx, cy, scale, angle } = this.smoothed;\n    const W = this.canvas.width;\n\n    const mx = W - cx + this.maskXOffsetPx;\n    const mirroredAngle = -angle;\n\n    this.context.save();\n    this.context.translate(mx, cy);\n    this.context.rotate(mirroredAngle);\n\n    this.maskAnimator.draw(this.context, -scale / 2, -scale / 2, scale);\n    this.context.restore();\n  }\n\n  private updatePoseFromLandmarks(\n    landmarks: Array<{ x: number; y: number; z: number }>\n  ): void {\n    const W = this.canvas.width;\n    const H = this.canvas.height;\n\n    const L = landmarks[this.eyeLeftOuter];\n    const R = landmarks[this.eyeRightOuter];\n    if (!L || !R) return;\n\n    const Lx = L.x * W,\n      Ly = L.y * H;\n    const Rx = R.x * W,\n      Ry = R.y * H;\n\n    const cx = (Lx + Rx) * 0.5;\n    const cy = (Ly + Ry) * 0.5;\n\n    const angle = Math.atan2(Ry - Ly, Rx - Lx);\n    const eyeDist = Math.hypot(Rx - Lx, Ry - Ly);\n\n    const faceH = eyeDist * 2.0;\n\n    const target = {\n      cx,\n      cy: cy + this.maskYOffset * faceH,\n      scale: this.maskScale * eyeDist,\n      angle,\n    };\n\n    if (!this.smoothed.ready) {\n      this.smoothed = { ...target, ready: true };\n    } else {\n      const a = this.smoothFactor,\n        b = 1 - a;\n      this.smoothed.cx = a * target.cx + b * this.smoothed.cx;\n      this.smoothed.cy = a * target.cy + b * this.smoothed.cy;\n      this.smoothed.scale = a * target.scale + b * this.smoothed.scale;\n      this.smoothed.angle = a * target.angle + b * this.smoothed.angle;\n    }\n  }\n\n  private drawSmoothedMask(): void {\n    if (!this.maskLoaded) return;\n    const W = this.canvas.width;\n\n    const { cx, cy, scale, angle } = this.smoothed;\n\n    const mx = W - cx + this.maskXOffsetPx;\n    const mirroredAngle = -angle;\n\n    this.context.save();\n    this.context.translate(mx, cy);\n    this.context.rotate(mirroredAngle);\n\n    const w = scale;\n    const h = scale;\n    this.context.drawImage(this.maskImage, -w / 2, -h / 2, w, h);\n    this.context.restore();\n  }\n}\n","import { loadAssets } from './assets';\nimport { Game } from './game';\nimport { FaceFilterOverlay } from './faceFilterOverlay';\nimport { loadWorldMap } from './worldMap';\nimport { loadRandomImages } from './collage';\n\nconst loadCollageImages = async (): Promise<void> => {\n  const response = await fetch('assets/collage.json');\n  if (!response.ok) {\n    throw new Error(`Failed to load collage.json: ${response.statusText}`);\n  }\n  const data = await response.json();\n  await loadRandomImages(data.images);\n};\nconst face = new FaceFilterOverlay();\n\nconst horseSound = new Audio('assets/horsEren.mp3');\nhorseSound.loop = true;\n\nconst soundtrack = new Audio('assets/Sima.mp3');\nsoundtrack.loop = true;\n\nconst ASSET_LIST = [\n  '1.png',\n  '2.png',\n  '3.png',\n  '4.png',\n  'walk_right.png',\n  'walk_left.png',\n  'walk_up.png',\n  'walk_down.png',\n  'idle_right.png',\n  'idle_left.png',\n  'duck.png',\n  'dancer.png',\n  'clown.png',\n  'water.jpg',\n  'root.png',\n];\n\nwindow.addEventListener('load', async () => {\n  await loadAssets(ASSET_LIST);\n  await loadCollageImages();\n  const world = await loadWorldMap('assets/world.json');\n  const canvas = document.getElementById('gameCanvas') as HTMLCanvasElement;\n  const game = new Game(canvas, horseSound, soundtrack, world);\n  game.setFaceOverlay(face);\n  const unlock = (): void => {\n    face.init().catch(console.warn);\n    window.removeEventListener('click', unlock);\n    window.removeEventListener('keydown', unlock);\n  };\n  window.addEventListener('click', unlock);\n  window.addEventListener('keydown', unlock);\n\n  game.start();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (window as any).face = face;\n});\n"],"file":"assets/index-efsz8B3N.js"}